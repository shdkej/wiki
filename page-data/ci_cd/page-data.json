{"componentChunkName":"component---src-templates-blog-post-js","path":"/ci_cd/","result":{"data":{"site":{"siteMetadata":{"title":"SH"}},"markdownRemark":{"id":"5a27c5a7-880b-50c7-9f08-936c4534b0c7","excerpt":"개요 상황 1. 개인 프로젝트로 go web server를 구축하여 원격 서버에 배포 상황 2. 10인 개발팀이 개발은 compose로 진행하고 배포를 argocd로 배포 상황 3. 3명의 개발자가 terraform으로 인프라 관리 및 배포 배포와 릴리즈 분리 전체적인 흐름 개발 Git…","html":"<h2 id=\"개요\" style=\"position:relative;\"><a href=\"#%EA%B0%9C%EC%9A%94\" aria-label=\"개요 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>개요</h2>\n<p>상황 1. 개인 프로젝트로 go web server를 구축하여 원격 서버에 배포</p>\n<p>상황 2. 10인 개발팀이 개발은 compose로 진행하고 배포를 argocd로 배포</p>\n<p>상황 3. 3명의 개발자가 terraform으로 인프라 관리 및 배포</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input type=\"checkbox\" disabled> 배포와 릴리즈 분리</li>\n</ul>\n<h2 id=\"전체적인-흐름\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4%EC%A0%81%EC%9D%B8-%ED%9D%90%EB%A6%84\" aria-label=\"전체적인 흐름 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체적인 흐름</h2>\n<p>개발</p>\n<ul>\n<li>Git Commit</li>\n<li>Git Push</li>\n</ul>\n<p>개발자가 해야할 일</p>\n<ul>\n<li>기능 개발</li>\n<li>오류 수정</li>\n<li>새로운 아키텍처 추가</li>\n</ul>\n<p>CI</p>\n<ul>\n<li>정적 분석</li>\n<li>테스트 실행</li>\n<li>패키징</li>\n</ul>\n<p>CD</p>\n<ul>\n<li>배포</li>\n</ul>\n<p>ci/cd 선택요소</p>\n<ul>\n<li>pr or push</li>\n<li>브랜치명</li>\n<li>스킵</li>\n<li>배포 형태</li>\n</ul>\n<p>흐름\n기능 브랜치 해서 푸시하면 ci 실행\n머지하면 cd 실행\n마스터에 푸시 막기</p>\n<h4 id=\"제한\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%ED%95%9C\" aria-label=\"제한 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제한</h4>\n<ul>\n<li>커밋 전 체크 1초</li>\n<li>풀 리퀘스트 후 테스트 시간 10분</li>\n<li>머지 후 배포 10초</li>\n</ul>\n<h2 id=\"ci\" style=\"position:relative;\"><a href=\"#ci\" aria-label=\"ci permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI</h2>\n<ul>\n<li>coding convention</li>\n<li>test</li>\n<li>code profiling\n<ul>\n<li>lint, coding convention check - static code analyse\n<ul>\n<li>security check(synk)</li>\n<li>codefactor</li>\n<li>codecov</li>\n<li>도커 이미지 보안 스캔하는 서비스 - docker bench for security</li>\n<li>Find bugs or perform static analysis tool - pychecker, pylint</li>\n<li><a href=\"https://semgrep.dev/\">semgrep</a></li>\n</ul>\n</li>\n<li><a href=\"https://github.com/andresz1/size-limit-action\">size limit check</a></li>\n<li>check test. check coverage</li>\n</ul>\n</li>\n<li>pull request with report</li>\n<li>pull request and code review</li>\n<li>build</li>\n<li>[version marking](Team_management#Conventional commits)</li>\n</ul>\n<h4 id=\"ci-strategy\" style=\"position:relative;\"><a href=\"#ci-strategy\" aria-label=\"ci strategy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI strategy</h4>\n<p>실패를 먼저 확인한다</p>\n<ul>\n<li>pull request를 보내고 테스트가 실패하는 것을 먼저 달게 하는 템플릿을 만든다</li>\n</ul>\n<p>진행 결과를 코멘트해준다</p>\n<ul>\n<li>test</li>\n<li>릴리즈 태그</li>\n<li>변경된 파일(?)</li>\n<li>배포 결과</li>\n</ul>\n<h4 id=\"ci-cookbook\" style=\"position:relative;\"><a href=\"#ci-cookbook\" aria-label=\"ci cookbook permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CI cookbook</h4>\n<ul>\n<li>\n<p>실패 시 메시지</p>\n<ul>\n<li><code class=\"language-text\">if: failure()</code></li>\n</ul>\n</li>\n<li>\n<p>스킵</p>\n<ul>\n<li>commit이나 pr에 [ci skip] 또는 [skip ci]를 하면 자동 스킵</li>\n</ul>\n</li>\n<li>\n<p>풀리퀘스트에 코멘트 달기</p>\n<ul>\n<li><code class=\"language-text\">uses: actions/github-script@0.3.0</code></li>\n<li><code class=\"language-text\">script: github.issues.createComment()</code></li>\n</ul>\n</li>\n<li>\n<p>테스트 결과 코멘트 달기</p>\n<ul>\n<li>coveralls 이용. coveralls bot을 레포에 초대해야한다. 잘 안붙는다</li>\n<li>codecov 도 있다</li>\n<li><code class=\"language-text\">uses: romeovs/lcov-reporter-action@v0.2.16</code>  심플 커버리지 확인</li>\n</ul>\n</li>\n<li>\n<p>pull request, push 상황 체크</p>\n<ul>\n<li><code class=\"language-text\">on: [\"push\", \"pull request\"]</code></li>\n</ul>\n</li>\n<li>\n<p>pull request 생성</p>\n<ul>\n<li><code class=\"language-text\">uses: repo-sync/pull-request@v2</code></li>\n<li>destination_branch, pr_title, pr_body 등 설정</li>\n</ul>\n</li>\n<li>\n<p>변수 여러줄 저장하기</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">go test -cover -v > output.txt\nbody=$(cat output.txt)\n\nbody=\"${body//'%'/'%25'}\"\nbody=\"${body//$'\\n'/'%0A'}\"\nbody=\"${body//$'\\r'/'%0D'}\"\n\necho \"::set-output name=body::$body\"</code></pre></div>\n<ul>\n<li>파일에서 읽으려면 예약된 문자들을 입력해줘야 여러 줄로 인식이 됨</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">echo ::set-output name=stdout::`go test -cover -v`</code></pre></div>\n<ul>\n<li>stdout을 바로 받으려면 이렇게만 해도 된다</li>\n</ul>\n</li>\n<li>\n<p>cache</p>\n<ul>\n<li>actions/cache 이용</li>\n<li><code class=\"language-text\">if: steps.cache.outputs.cache-hit != 'true'</code> 로 체크</li>\n</ul>\n</li>\n<li>\n<p>terraform 구동</p>\n<ul>\n<li><code class=\"language-text\">uses: hashicorp/setup-terraform@v1</code></li>\n<li>terraform cloud 토큰 생성 후 이용 가능</li>\n</ul>\n</li>\n<li>\n<p>docker repository</p>\n<ul>\n<li>github repository</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">echo \"${{ secrets.GITHUB_TOKEN }}\" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin\nVERSION=$(echo \"${{ github.ref }}\" | sed -e 's,.*/\\(.*\\),\\1,')\ndocker push docker.pkg.github.com/${{ github.repository }}:$VERSION</code></pre></div>\n<ul>\n<li>dockerhub repository</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">uses: docker/login-action@v1\nwith:\n    username:\n    password:</code></pre></div>\n</li>\n<li>\n<p><a href=\"https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context\">github default context</a></p>\n</li>\n<li>\n<p><a href=\"https://github.com/sdras/awesome-actions\">awesome-actions</a></p>\n</li>\n</ul>\n<h4 id=\"jenkins\" style=\"position:relative;\"><a href=\"#jenkins\" aria-label=\"jenkins permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jenkins</h4>\n<p>수동 배포도 되는 것이 장점</p>\n<p>코드 분리 가능 (github action, circle ci는 불가)</p>\n<p>선언형과 groovy같은 스크립티드 문법 중 선택해서 쓸 수 있는데, 선언형으로 안되는\n것들이 있어서 스크립티드를 써야하는 경우가 있다고 한다.</p>\n<p>Configuration as code 플러그인을 설치하면 코드로 설정 관리 가능</p>\n<ul>\n<li><a href=\"https://tech.kakao.com/2021/07/16/devops-for-msa/\">https://tech.kakao.com/2021/07/16/devops-for-msa/</a></li>\n</ul>\n<h4 id=\"pipeline\" style=\"position:relative;\"><a href=\"#pipeline\" aria-label=\"pipeline permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pipeline</h4>\n<p>백엔드는 깃 폴더 내에서 작업하고\n푸시하면 이미지가 만들어지고 파이프라인에 들어간다\n디비나 다른 프로그램 사용이 필요할 때 바로바로 사용할 수 있어야 하고, 연결과 내부 확인이 바로 되어야 한다\n개발과 테스트가 자유자재로 되어야 한다\n개발을 하다가 테스트가 필요하면 바로 할 수 있어야 한다</p>\n<p>프론트엔드도 깃 폴더 내에서 작업하고\n백엔드의 데이터를 마음대로 가져올 수 있어야 한다\n라이브러리 관리가 되어야 한다</p>\n<p>커밋 전 확인할 것</p>\n<ul>\n<li>커밋 시에 사전체크가 오래 걸리면 업무가 지연된다</li>\n</ul>\n<p>커밋 후 확인할 것</p>\n<p>직접 관리할 서버와 서비스를 이용하는 것은 어떻게 나눠야할까\n젠킨스, 깃헙 액션</p>\n<p>메인서버의 데이터를 바로 테스트용으로 카피할 수 있으면 좋겠다\n그러려면 메인서버의 데이터 자체가 너무 비대해지면 안되겠다</p>\n<p>세부설정을 할 수 있게 하되, 기본값은 실제 서버값으로 하면 테스트하기 좋지 않을까?\n기본값으로 초기값을 하면 정확한 테스트가 안될 것 같다</p>\n<p>테스트 서버의 자원을 로컬에서 할지 공용 풀에서 할지 선택하면 좋겠다</p>\n<p>관리페이지 접속 -> 서비스 신청 -> 주소 할당</p>\n<h4 id=\"커밋-시-동작-가능한-단위로-한다\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%B0%8B-%EC%8B%9C-%EB%8F%99%EC%9E%91-%EA%B0%80%EB%8A%A5%ED%95%9C-%EB%8B%A8%EC%9C%84%EB%A1%9C-%ED%95%9C%EB%8B%A4\" aria-label=\"커밋 시 동작 가능한 단위로 한다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커밋 시 동작 가능한 단위로 한다</h4>\n<p>한 동작마다? 한 단위마다?\n처음 틀 만들 때는 빠른 개발을 위해 되는대로 작성해놓고 커밋만 따로 쪼개서 하고\n싶은데 가능한가?</p>\n<h4 id=\"기능에-문제-없는-것이-확인-된-단위로-커밋을-하고-싶다\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%8A%A5%EC%97%90-%EB%AC%B8%EC%A0%9C-%EC%97%86%EB%8A%94-%EA%B2%83%EC%9D%B4-%ED%99%95%EC%9D%B8-%EB%90%9C-%EB%8B%A8%EC%9C%84%EB%A1%9C-%EC%BB%A4%EB%B0%8B%EC%9D%84-%ED%95%98%EA%B3%A0-%EC%8B%B6%EB%8B%A4\" aria-label=\"기능에 문제 없는 것이 확인 된 단위로 커밋을 하고 싶다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기능에 문제 없는 것이 확인 된 단위로 커밋을 하고 싶다</h4>\n<p>기능에 문제가 있는지 없는지는 어떻게 확인할까\n검사하기 좋은 아키텍처를 가지는 것도 중요하겠다</p>\n<ul>\n<li>정적 테스트가 완료되면 문제 없다고 할 수 있게끔 해야겠다</li>\n</ul>\n<p>CI를 커밋할 때 하는 것보다 PR을 할 때 하면 PR에 결과 표시해주면 한 곳에서 확인할 수 있어서 좋겠다</p>\n<p>커밋할 때는 짧게 확인 가능한 위주로 테스트하고, PR에서 좀 더 진행하면 좋겠다</p>\n<p>개발자들이 실제 작업하는 환경을 수시로 확인하는 작업이 필요하다</p>\n<h4 id=\"pr\" style=\"position:relative;\"><a href=\"#pr\" aria-label=\"pr permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>pr</h4>\n<p>pr마다 버전을 넣으면 금방 100을 넘을 것 같은데?\n컨테이너 이미지 만들 때 버저닝 같이 하게 된다</p>\n<h4 id=\"meshkorea\" style=\"position:relative;\"><a href=\"#meshkorea\" aria-label=\"meshkorea permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>meshkorea</h4>\n<p>젠킨스파일을 각 레파지토리에 추가해서 파일 하나로 CI/CD 작업을 연결한다\ntag 기반으로 젠킨스에 훅을 보낸다\n메뉴얼로 바로 배포하는 옵션도 있다\nkubernetes 레포와 소스코드 레포를 분리했다\nhelm 의 values만 수정해서 관리할 수 있게 했다</p>\n<h4 id=\"devops\" style=\"position:relative;\"><a href=\"#devops\" aria-label=\"devops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>devops</h4>\n<p>개발자로서 데브옵스라면 팀의 소스를 모두 풀링해서 서버에 올리는 것에 신경 쓸\n것이고\n문화로서 데브옵스라면 각 개발자가 서버에 쉽게 올릴 수 있도록 신경 쓸 것이다</p>\n<p>동작은 어차피 서버에서 자동으로 하겠지만,\n개발자가 서버에 어떻게 올릴지 설정을 하게 할지, 아니면 운영자가 설정을 할지의\n선택요소가 남아있다</p>\n<p>개발자가 피드백을 받으려면 개발자가 직접 설정해서 받는쪽이 나을 것 같다\n프로덕션에서 테스트도 해봐야할 것이고,</p>\n<p>개발자가 설정하되, 파일 하나로 할 수 있고 쉽게 할 수 있도록 해야겠다</p>\n<h4 id=\"workflow\" style=\"position:relative;\"><a href=\"#workflow\" aria-label=\"workflow permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>workflow</h4>\n<p>운영쪽에서 개발코드를 지정할 수도 있고\n개발코드쪽에서 운영쪽으로 푸시할 수도 있고</p>\n<p>그러고보니 argocd를 실행하는 코드는 개발소스 레파지토리에 등록해서 써야하겠다</p>\n<ul>\n<li>운영용 레파지토리에서 개발용쪽을 트리거 받는 방법도 있긴 하네</li>\n</ul>\n<p>젠킨스파일처럼 파일 하나만 폴더에 추가해서\npr요청하면 그 파일이 서버에 훅을 보내서 특정 작업들을 실행하도록 한다</p>\n<p>파일에는 세부 설정도 가능하지만 기능 on/off 정도만 해도 되도록 하면 좋지 않을까\nargocd라고 적어놓으면 배포자동화가 되도록</p>\n<p>코드 푸시하는 곳에서 이슈 리스트를 확인하고 코드를 내려받고, 푸시하면 리포트를\n받아보게 되는 올인원 툴이 있으면 좋겠다\ngithub action 추적도 되고</p>\n<p>관리 쪽에서 개발소스를 컨텍해서 올리는게 더 안전성이 높지 않을까</p>\n<h2 id=\"정적-소스-분석\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%A0%81-%EC%86%8C%EC%8A%A4-%EB%B6%84%EC%84%9D\" aria-label=\"정적 소스 분석 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정적 소스 분석</h2>\n<p>lint check\ntest\nsecure check\nsize check</p>\n<p>상황 처리</p>\n<ul>\n<li>push, pull request, 특정 branche만 받기</li>\n</ul>\n<p>테스트 결과 이슈에 남기기</p>\n<p>현업에서 필요한 복잡한 CI/CD 구성을 알고 싶다\naws에서 복잡한 구조를 지원하는 것을 어필하기 위해 소개하는 문서가 있을 것 같은데</p>\n<p>터미널에서 푸시를 하면 깃헙 사이트에 들어가야 진행 상황을 알 수 있다\n그래서 슬랙을 써서 하는 회사들이 있는데\n터미널에서 바로 인터랙티브하게 할 수 없을까</p>\n<ul>\n<li>actions-cli</li>\n</ul>\n<h4 id=\"report\" style=\"position:relative;\"><a href=\"#report\" aria-label=\"report permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>report</h4>\n<ul>\n<li>소스 코드 정보\n<ul>\n<li>신규로 추가한 라인 수, 변경된 라인 수, 소스 코드 파일 개수, 커밋 개수 등</li>\n</ul>\n</li>\n<li>소스 코드 정적 분석 데이터</li>\n<li>소스 코드 빌드 데이터\n<ul>\n<li>작업별 빌드/테스트 시간</li>\n<li>빌드 성공/실패율, 빌드 로그</li>\n<li>빌드 테스트 리포트, 패키지(APK) 정보, 버전 정보</li>\n<li>빌드 옵션, 메모리 덤프 데이터</li>\n<li>빌드 태스크 의존성 정보</li>\n</ul>\n</li>\n<li>빌드 시스템 정보\n<ul>\n<li>사용자 시스템 정보(CPU, 메모리)</li>\n<li>CPU 사용량, 메모리 사용량, 디스크 사용량</li>\n<li>빌드 대기 시간, 빌드 장비 활용 시간</li>\n</ul>\n</li>\n<li>패키지 크기</li>\n<li><a href=\"https://engineering.linecorp.com/ko/blog/build-a-continuous-cicd-environment-based-on-data/\">https://engineering.linecorp.com/ko/blog/build-a-continuous-cicd-environment-based-on-data/</a></li>\n</ul>\n<h4 id=\"workflow-1\" style=\"position:relative;\"><a href=\"#workflow-1\" aria-label=\"workflow 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>workflow</h4>\n<p>개발 전 - 개발 중 - 개발 후 관리</p>\n<ul>\n<li>개발 전\n처음 프로젝트 시작 시 필요한 파일\n깃헙 워크플로우\n도커 컴포즈 파일\n깃 훅\n<ul>\n<li>workflows, pre-commit, PULL-REQUEST 파일 불러오기</li>\n<li>synk 등 github third party 허가 등록</li>\n<li>특정 언어 템플릿이나 미들웨어 서버 필요 시 불러오기?</li>\n<li>security 정보 등록</li>\n</ul>\n</li>\n<li>개발 중\n<ul>\n<li>git-cz 등 개발편의용 도구</li>\n<li>workflows 실행으로 테스트 자동</li>\n</ul>\n</li>\n</ul>\n<p>처음에는 infra repo에서 가져와서 서비스를 배포하는데\n서비스별로 별도의 infra가 필요해지면 쉽게 변경 가능해야할까? 아니면 굳이\n안바꾸는 것을 권장해야할까?</p>\n<p>스테이지 서버에서 테스트 후 프로덕션 서버로 카나리 배포, 롤링 업데이트를 하게\n될텐데 이 설정들은 infra repo에 고정적으로 있으면 되나?</p>\n<p>ci/cd에서 하는 것이 배포 위치 지정(dev, prod 지정),</p>\n<hr>\n<h2 id=\"cd\" style=\"position:relative;\"><a href=\"#cd\" aria-label=\"cd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CD</h2>\n<ul>\n<li>hotfix</li>\n<li>integration each other</li>\n<li>how to test connection with each other services</li>\n<li>스테이지 서버</li>\n<li>rolling deploy -- kubernetes support</li>\n</ul>\n<h4 id=\"imagine-of-erp-cicd\" style=\"position:relative;\"><a href=\"#imagine-of-erp-cicd\" aria-label=\"imagine of erp cicd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>imagine of erp CI/CD</h4>\n<p>local docker test\ncommit -> push -> deploy -> docker image update</p>\n<ul>\n<li>what if production has error?</li>\n<li>how to make fast hot-fix?\n<ul>\n<li>fixing with a test case</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"feedback\" style=\"position:relative;\"><a href=\"#feedback\" aria-label=\"feedback permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Feedback</h4>\n<ul>\n<li>Measure Code, server(package), user experience to github issue</li>\n<li>Code static is reported in CI cycle.</li>\n<li>package is reported in CD cycle</li>\n<li>Error time, count, environment,</li>\n</ul>\n<h4 id=\"code-static-analyze-content\" style=\"position:relative;\"><a href=\"#code-static-analyze-content\" aria-label=\"code static analyze content permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Code static analyze content</h4>\n<ul>\n<li>Dead branch check (long time)</li>\n<li>Lint check</li>\n<li>Security check</li>\n<li>Dependency check</li>\n<li>Execute time check</li>\n</ul>\n<h4 id=\"deploy-make-easy\" style=\"position:relative;\"><a href=\"#deploy-make-easy\" aria-label=\"deploy make easy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>deploy make easy</h4>\n<ul>\n<li>one directory to push</li>\n<li>many program related</li>\n<li>update to be small</li>\n<li>test to be all</li>\n<li>quick rollback</li>\n</ul>\n<h4 id=\"배포\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%ED%8F%AC\" aria-label=\"배포 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배포</h4>\n<p>argocd에서 쿠버네티스 템플릿을 가지고 있고,\n코드 레포지토리에서는 이미지만 빌드하도록 하면 좋을까</p>\n<h2 id=\"배포-자동화\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%ED%8F%AC-%EC%9E%90%EB%8F%99%ED%99%94\" aria-label=\"배포 자동화 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배포 자동화</h2>\n<ul>\n<li>\n<p>docker package</p>\n</li>\n<li>\n<p>maven package</p>\n</li>\n<li>\n<p>exe 파일로 package</p>\n</li>\n<li>\n<p>ansible로 로컬 배포</p>\n</li>\n<li>\n<p>terraform으로 클라우드 배포</p>\n</li>\n<li>\n<p>docker 패키징</p>\n</li>\n<li>\n<p>argocd</p>\n</li>\n</ul>\n<p>CD 로 로컬 서버에 배포하는 작업 보안 확인</p>\n<hr>\n<h3 id=\"상황-1\" style=\"position:relative;\"><a href=\"#%EC%83%81%ED%99%A9-1\" aria-label=\"상황 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상황 1</h3>\n<p>개인 프로젝트로 go web server를 구축하여 원격 서버에 배포</p>\n<p>브랜치별 개발 - 푸시 - 정적 테스트 - 배포 - 릴리즈</p>\n<p>릴리즈 된 것이 개발에 바로 피드백을 줘야 한다</p>\n<p>테스트 실패</p>\n<p>배포 실패</p>\n<p>릴리즈 실패</p>\n<p>릴리즈 시 특정 동작 문제 발생</p>\n<p>이슈 보고</p>\n<p>에러가 생각나서 긴급 수정</p>\n<p>리소스 부족</p>\n<p>외부 라이브러리 문제 발생</p>\n<h3 id=\"상황-2\" style=\"position:relative;\"><a href=\"#%EC%83%81%ED%99%A9-2\" aria-label=\"상황 2 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상황 2</h3>\n<p>10인 개발팀이 개발은 compose로 진행하고 배포를 argocd로 배포</p>\n<p>권한 관리 (개발팀이 경영팀에 마음대로 들여다 볼 필요 없음)</p>\n<p>휴먼 에러 방지</p>\n<h2 id=\"상황-3\" style=\"position:relative;\"><a href=\"#%EC%83%81%ED%99%A9-3\" aria-label=\"상황 3 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상황 3</h2>\n<p>3개의 실제서버를 구성해놓고\n오토 스케일링 하도록 한다\n업데이트시 롤링 업데이트를 기반으로 하는데\n하나를 카나리로 설정한 다음 서버별 접속 링크를 제공해서 접속현황과 실제 테스트를 진행할 수 있게 한다</p>\n<p>개발서버 - 실제서버\n단계로 바로 갈 수 있게 하고\n개발서버에서 각 파트가 다른파트에 영향을 최대한 안주도록 한다</p>\n<p>깃 푸시하면 도커로 테스트하고 풀리퀘스트 머지를 하면 바로 실제서버로 가게하거나 배포 시기를 정해놓는다면 배포큐에 쌓아놓는다</p>\n<h4 id=\"edge-case\" style=\"position:relative;\"><a href=\"#edge-case\" aria-label=\"edge case permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>edge case</h4>\n<p>로그 폭발\n권한 남용\n시스템 다운\n네트워크 혼잡</p>\n<h4 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>reference</h4>\n<ul>\n<li><a href=\"https://blogs.oracle.com/developers/adventures-in-cicd-3-running-tests-publishing-test-reports\">https://blogs.oracle.com/developers/adventures-in-cicd-3-running-tests-publishing-test-reports</a>\n<ul>\n<li>test, failure check,</li>\n</ul>\n</li>\n<li><a href=\"https://www.aaron-powell.com/posts/2020-03-23-approval-workflows-with-github-actions/\">https://www.aaron-powell.com/posts/2020-03-23-approval-workflows-with-github-actions/</a>\n<ul>\n<li>set version, create version file, approval workflows</li>\n</ul>\n</li>\n<li><a href=\"https://johnny-mh.github.io/post/standard-version-%EA%B8%B0%EB%B0%98-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%B0%B0%ED%8F%AC%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4\">https://johnny-mh.github.io/post/standard-version-기반-서비스-배포프로세스</a>\n<ul>\n<li>commitizen, standard-version, ci pr check, cdn 업로드(?)</li>\n<li>frontend는 index.html만 배포하면 되겠다. 컨테이너보다 훨씬 가볍다</li>\n</ul>\n</li>\n<li><a href=\"https://shivanshs9.me/medium/do-github-acti\">https://shivanshs9.me/medium/do-github-acti</a> on-like-a-pro-594bcb813b22</li>\n<li><a href=\"https://ahnheejong.name/articles/web-developers-flutter-cicd-using-travis-ci/\">https://ahnheejong.name/articles/web-developers-flutter-cicd-using-travis-ci/</a></li>\n<li><a href=\"https://woowabros.github.io/experience/2018/06/26/bros-cicd.html\">https://woowabros.github.io/experience/2018/06/26/bros-cicd.html</a>\n<ul>\n<li>slack bot으로 배포 알림, 릴리즈 확인</li>\n</ul>\n</li>\n<li><a href=\"https://www.theteams.kr/teams/7242/post/70736\">https://www.theteams.kr/teams/7242/post/70736</a>\n<ul>\n<li>development, qa, deployment로 프로세스 구분</li>\n</ul>\n</li>\n<li><a href=\"https://www.slideshare.net/awskorea/cicd-aws-aws-aws-summit-seoul-2019\">https://www.slideshare.net/awskorea/cicd-aws-aws-aws-summit-seoul-2019</a>\n<ul>\n<li>소스 빌드 테스트 프로덕션으로 프로세스 구분</li>\n</ul>\n</li>\n<li><a href=\"https://roseline.oopy.io/dev/github-action-cahce\">https://roseline.oopy.io/dev/github-action-cahce</a>\n<ul>\n<li>size-limit-check 해주는 js용 action이 있다</li>\n</ul>\n</li>\n<li><a href=\"https://velog.io/@hax0r/Node-%ED%94%84%EB%A1%9C%EB%8D%95%ED%8A%B8-%ED%80%84%EB%A6%AC%ED%8B%B0%EB%A5%BC-%EB%86%92%EC%9D%B4%EB%8A%94-%ED%98%91%EC%97%85-%EB%B0%A9%EB%B2%95-q29zo12w\">https://velog.io/@hax0r/Node-프로덕트-퀄리티를-높이는-협업-방법-q29zo12w</a>\n<ul>\n<li>commitlint, semantic release, husky 사용하자</li>\n</ul>\n</li>\n<li><a href=\"https://engineering.linecorp.com/ko/blog/line-ads-devops-culture/\">Line</a>\n<ul>\n<li>기획, 코드, 빌드, 테스트, 릴리스, 배포, 운영, 모니터링</li>\n<li>기획 - confluence로 관리, kanban에 이슈 매칭, jira로 이슈 트래킹</li>\n<li>코드 - git-flow를 간소화해서 develop에 featrue를 붙여 개발 후 master에 병합\n<ul>\n<li>코드리뷰 - 이슈트래커 번호, 1명의 승인 필요</li>\n</ul>\n</li>\n<li>빌드, 테스트 - 언어별 기본 test, 요청 응답 테스트, 두 장비가 요청을 보내\n같은 결과를 보내는지 비교(api comparator)\n<ul>\n<li>PR 생성, 변경 시 단위 테스트</li>\n<li>상위 브런치에 머지했을 때 API 테스트</li>\n<li>특정 주기마다 테스트 반복\n<ul>\n<li>단위 테스트 실패 시 머지 불가 조건</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>릴리즈, 배포 - 위에서 검증 완료되었는지 한번 더 확인\n<ul>\n<li>kanban에서 confirm상태가 됐는지 확인하고 deploy로 상태 변경</li>\n<li>배포 전에 변경 공지를 등록하고 어떤 변경사항인지 관리자와 공유(메신저)</li>\n<li>배포 시작되면 전체 공유</li>\n<li>카나리로 배포, 1대에 배포 후 모니터링 되면 3분의 1부터 배포\n<ul>\n<li>장애 발생 시 이전 상태로 재배포. PR revert, Tag 제거</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"https://blog.banksalad.com/tech/become-an-organization-that-deploys-1000-times-a-day/\">banksalad</a>\n<ul>\n<li>pr 횟수를 모니터링, slack의 대화내용에서 파싱</li>\n<li>git-flow를 간소화</li>\n<li>gomplate</li>\n<li>build - lint, test, docker image build</li>\n<li>deploy용 bot을 만들어 사용\n<ul>\n<li>status, deploy, history 기능 지원</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"github이나-jenkins-travis에서-cicd-노하우를-공유할-것-같은데\" style=\"position:relative;\"><a href=\"#github%EC%9D%B4%EB%82%98-jenkins-travis%EC%97%90%EC%84%9C-cicd-%EB%85%B8%ED%95%98%EC%9A%B0%EB%A5%BC-%EA%B3%B5%EC%9C%A0%ED%95%A0-%EA%B2%83-%EA%B0%99%EC%9D%80%EB%8D%B0\" aria-label=\"github이나 jenkins travis에서 cicd 노하우를 공유할 것 같은데 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>github이나 jenkins, travis에서 ci/cd 노하우를 공유할 것 같은데</h4>\n<p>찾아보자</p>\n<ul>\n<li><a href=\"https://blog.travis-ci.com/\">travis ci blog</a></li>\n</ul>\n<h4 id=\"ci-cd-pipeline\" style=\"position:relative;\"><a href=\"#ci-cd-pipeline\" aria-label=\"ci cd pipeline permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ci cd pipeline</h4>\n<p>그러면 이번 장에서는 이런 현대의 서버 개발 환경이 어떻게 구성되는지를 살펴보기로 한다.\n다음과 같은 시나리오를 생각해보자.\n\"개발자가 아침에 출근해서 책상 앞에 앉아서 노트북을 켜고 로그인을 한다. IDE 도구인\n이클립스를 실행하면 이슈 트랙킹 도구와 연결되어 오늘 해야 할 일들이 자동으로 리스\n트 업 된다. 개발자는 그중에서 하나의 태스크를 가져와서 내용을 확인한다. 해당 태스크\n의 상태를 진행 중(In Progress) 상태로 바꾸고, 소스 코드 관리 시스템에서 최신 소스 코\n드를 내려받는다. 로직을 구현하고, 코드를 검증하기 위해서 단위 테스트 코드를 작성하여\n테스트까지 수행한 후 정상적으로 작동하는 것을 확인한 후에 다시 소스 코드 관리 시스템\n에 코드를 반영 요청을 한다.\n반영 요청을 즉시, 자신의 선배 개발자에게 통보가 되고 선배 개발자는 해당 개발자가 변\n경한 코드의 내용을 형상관리 시스템에서 확인하고 시스템을 통해서 코드에 대한 피드백\n을 적어 놓는다. 코드 상에 문제가 없으면 코드 반영을 허가하고 변경 부분은 전체 소스 관\n리 시스템에 반영된다.\n코드가 반영되면 중앙화된 자동 빌드 시스템에서 코드를 내려받아서 컴파일 및 테스트 서\n버에 자동으로 배포하고, 이미 정의된 테스트를 수행한다. 테스트가 끝나면 전체 소스 코\n드 줄 수 중에 어느 줄이 테스트가 되었는지, 전체 코드 중 테스트 된 줄 수의 비율 등을\n자동으로 측정해서 리포트를 생성해 준다. 또한, 자동화된 규칙에 따라서 코드 상에 에러\n처리가 안 된 부분이나 명명 규칙(Naming Rule)이 틀린 부분을 자동 검출하여 팀원에게\n알려준다.\n모든 빌드와 테스트가 끝나면 해당 코드는 스테이징 (Staging) 환경으로 자동 배포가 되\n고, 변경 부분은 QA 팀에 의해서 테스트를 거친 후에, 매일 밤에 운영 시스템에 반영된다.</p>\n<ul>\n<li>(책) 조대협</li>\n</ul>\n<h4 id=\"etc\" style=\"position:relative;\"><a href=\"#etc\" aria-label=\"etc permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>etc</h4>\n<p>웹에서는 리액트를 쓰든, wasm를 쓰든 결국 최종 출력물은 HTML이다. + js,css</p>\n<p>script 보다 workflows를 활용?</p>\n<p>jenkins, github action, travis에 상관없이 ci를 실행하게 하려면 스크립트로\n단계를 만드는게 좋을까? 근데 스크립트를 안쓰려고 ci툴을 쓰는건데...</p>\n<p>workflow 실패 시 에러 메시지와 함께 피드백 주는 방법 확인</p>\n<p>시맨틱 버저닝에서 버그 픽스와 피쳐 추가가 같이 있으면 버그 픽스 태그 따로, 피쳐\n추가 태그 따로 올리는게 맞지 않나?</p>\n<h2 id=\"deploy\" style=\"position:relative;\"><a href=\"#deploy\" aria-label=\"deploy permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Deploy</h2>\n<h4 id=\"infra와-source를-분리\" style=\"position:relative;\"><a href=\"#infra%EC%99%80-source%EB%A5%BC-%EB%B6%84%EB%A6%AC\" aria-label=\"infra와 source를 분리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>infra와 source를 분리</h4>\n<p>쿠버네티스 테스트 레포지토리와 myspace 레포지토리를 분리하고\nMyspace의 폴더가 곧 프로젝트 목록이 되도록 구성</p>\n<ol>\n<li>Basic 폴더를 만들어서 이를 복사해서 쓰도록한다</li>\n<li>Argocd에서 폴더를 등록한다</li>\n<li>배포 완료</li>\n</ol>\n<p>인프라 코드도 개발자가 관리하도록 하기 위함.\n개발 코드는 컨테이너 이미지 배포하기까지 자동</p>\n<p>Prefix로 infra 서비스와 비즈니스 서비스 구분</p>\n<p>argocd를 github action에서 실행한다면\n소스코드와 인프라코드가 분리되있는데\n소스코드 변경을 인프라가 어떻게 알아차릴 수 있지?</p>\n<p>소스코드 변경 후 인프라를 다시 건드리면 안된다\n인프라는 인프라대로 관리되고, 소프트웨어 업데이트는 소스코드에서 따로 처리되야 한다</p>\n<p>인프라 변경 시 변경될 것은 쿠버네티스 셋팅, 서버 셋팅\n소스 변경 시 변경될 것은 소프트웨어 버전, 세부 설정</p>\n<p>둘 다 쿠버네티스 어플라이를 해야되는 건 같다.</p>\n<p>인프라 생성 시 argocd 등록 되도록 하고, 그게 소스코드를 보도록 하면 될까?</p>\n<ol>\n<li>레포지토리 생성</li>\n<li>도커 빌드</li>\n<li>인프라 레포에서 폴더 생성</li>\n<li>argocd 싱크 등록을 1 레포지토리로 등록</li>\n<li>레포지토리 업데이트</li>\n<li>argocd 동작</li>\n</ol>\n<h4 id=\"deploy-1\" style=\"position:relative;\"><a href=\"#deploy-1\" aria-label=\"deploy 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>deploy</h4>\n<p>서버의 kube config를 가져온다 - private key를 github secret에 등록시키고 scp를\n이용한다\n변경된 파일을 인식해서 apply 한다</p>\n<ol>\n<li>인프라에서 추가를 하면 서비스에 설정파일을 주입한다.</li>\n<li>서비스에서 간단한 파일이라도 추가해서 신호를 준다</li>\n</ol>\n<ul>\n<li>관건은 서비스를 업데이트 했을 때 따로 설정 없이 인프라가 알아챌 수 있는지인데</li>\n<li>cron을 계속 한다? 무리...\n<ul>\n<li>argocd도 근데 레포지토리를 cron하는 방식 아닌가?</li>\n</ul>\n</li>\n<li>argocd로 배포를 하면 처음 등록만 수동으로 해주면 된다.</li>\n<li>kubernetes를 워크플로우에서 동작하면 argocd 필요 없다</li>\n<li>argocd가 소스코드 변경을 보는게 아니라 yaml 파일을 보는거라...</li>\n</ul>\n<p>지금은 일단 elasticsearch에 dockerfile 빌드할 때 synonym 파일을 집어넣었다\n이러면 github과 연동이 안되어서 버전 업데이트 할 때 날아간다.\n대응 방법을 생각해야 한다\n쿠버네티스 로컬에서 볼륨을 만들어서 연결해도 github에 업데이트는 못한다\ncron으로 파일을 파싱해야 할까. 매일 한번씩 카피해서 올려도 될듯</p>\n<p>kubernetes 같은 네임스페이스에서 연결하는 방법은?\n서비스로 클러스터 ip는 오픈\n서비스 이름으로 인식은 한다.\n그러면 서버에서 호스트 명을 서비스명과 맞춰줘야 한다.</p>\n<h4 id=\"argocd\" style=\"position:relative;\"><a href=\"#argocd\" aria-label=\"argocd permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>argocd</h4>\n<p>terraform 으로 master ip 얻어서 argocd 마스터로 전달\n인프라 레포에서는 생성만 하고, 싱크는 argocd가 github을 보면서 할 수 있나?</p>\n<p>서비스 레포에서 푸시 -> 도커 이미지 변경 -> 인프라 레포에서 변경 인식\n-> argocd sync</p>\n<ul>\n<li>소스 레파지토리에서 인프라 레파지토리의 버전값을 변경하고 푸시하는 방식으로</li>\n</ul>\n<p>사용하더라</p>\n<ul>\n<li>argocd에서 kubernetes.local로 접속하는게 어디?</li>\n</ul>\n<h4 id=\"배포-1\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%ED%8F%AC-1\" aria-label=\"배포 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배포</h4>\n<p>스테이징 서버 없이 카나리로 테스트\n실제환경에서 카나리 테스트</p>\n<p>데이터에 문제 생길 것에 대비해서 업데이트 시 스냅샷을 찍어놓고 찍은 후 생긴\n데이터를 따로 더할 수 있게한다\n문제가 생기면 스냅샷으로 롤백하고 추가된 데이터를 더한다</p>\n<p>스냅샷과 데이터복구가 잘 되는지 검증한다</p>\n<h4 id=\"canary-release\" style=\"position:relative;\"><a href=\"#canary-release\" aria-label=\"canary release permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>canary release</h4>\n<p>카나리 배포를 할 때 프로덕션에 할 게 아니라 내부 서버로 카나리를 해놓으면\n검사하기 더 수월할까?\n프로덕션에서 테스트하는 것이 내부에서 보는 것과 차이가 없을까?\n프로덕션에서의 환경을 봐야하기 때문에 프로덕션을 봐야할까?</p>\n<h4 id=\"스테이징-대신-카나리로-직접-테스트\" style=\"position:relative;\"><a href=\"#%EC%8A%A4%ED%85%8C%EC%9D%B4%EC%A7%95-%EB%8C%80%EC%8B%A0-%EC%B9%B4%EB%82%98%EB%A6%AC%EB%A1%9C-%EC%A7%81%EC%A0%91-%ED%85%8C%EC%8A%A4%ED%8A%B8\" aria-label=\"스테이징 대신 카나리로 직접 테스트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스테이징 대신 카나리로 직접 테스트</h4>\n<p>그러면 카나리 하다가 전체가 문제가 생기면 어떻게 하냐는 걱정 생긴다</p>\n<p>격리를 잘 하고, 고가용성을 챙기고\n데이터 변경으로 인한 영향이 없도록 해야한다</p>\n<p>먼저 쿠버네티스, 깃헙을 이용해 개발하다가\n팀이 따로 분리되어 전문화 되면 비로소 자체 시스템이 필요하지 않을까</p>\n<p>처음에는 여러 역할이 한 팀에 있고, 이 팀들을 관리하는 팀이 있는 구조에서\n팀을 관리하는 팀을 관리하는 팀이 필요해지는 시점 정도부터 세부적인 팀의 분리를 하던가, 상위팀이 하위 팀을 위한 툴을 개발하는 팀으로 역할을 하던가 하면 되지 않을까</p>\n<h4 id=\"다른-버전을-사람들이-쓰면-문제가-생긴다\" style=\"position:relative;\"><a href=\"#%EB%8B%A4%EB%A5%B8-%EB%B2%84%EC%A0%84%EC%9D%84-%EC%82%AC%EB%9E%8C%EB%93%A4%EC%9D%B4-%EC%93%B0%EB%A9%B4-%EB%AC%B8%EC%A0%9C%EA%B0%80-%EC%83%9D%EA%B8%B4%EB%8B%A4\" aria-label=\"다른 버전을 사람들이 쓰면 문제가 생긴다 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>다른 버전을 사람들이 쓰면 문제가 생긴다</h4>\n<p>특히 db 처리에서 차이가 있으면 그렇겠다\n롤링업데이트는 괜찮은게 맞나?</p>\n<ul>\n<li>어댑터 패턴이라는 것이 있다\n점진적 업데이트 시 이전 버전의 데이터를 갖고 있다가 출력을 바꿔주는 식</li>\n</ul>\n<p>카나리를 먼저 하고 롤링 업데이트를 하면 되지 않을까?\ndb 같은 업데이트는 카나리로 하는게 좋겠다</p>\n<h4 id=\"without-stage-server\" style=\"position:relative;\"><a href=\"#without-stage-server\" aria-label=\"without stage server permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>without stage server</h4>\n<p>I want to make only 2 stages environment\ndevelopment &#x26; production</p>\n<p>what is problem</p>\n<ul>\n<li>staging server need exist?</li>\n<li>production safe</li>\n<li>production server has problem</li>\n<li>managing critical data</li>\n<li>real world simulation</li>\n</ul>\n<p>if in kubernetes. staging server is not problem. just one more pods?</p>\n<p>is it over-resource?\nCD pipeline can replace staging server?</p>\n<ul>\n<li>gitflow</li>\n<li>master, dev, release, stage, hotfix -- too much</li>\n<li>dev, test, stage, prod -- too much</li>\n<li>multi stage is require?</li>\n</ul>\n<p>can parsing data from every node?</p>","htmlAst":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"개요","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EA%B0%9C%EC%9A%94","ariaLabel":"개요 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"개요"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"상황 1. 개인 프로젝트로 go web server를 구축하여 원격 서버에 배포"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"상황 2. 10인 개발팀이 개발은 compose로 진행하고 배포를 argocd로 배포"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"상황 3. 3명의 개발자가 terraform으로 인프라 관리 및 배포"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{"className":["contains-task-list"]},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{"className":["task-list-item"]},"children":[{"type":"element","tagName":"input","properties":{"type":"checkbox","disabled":true},"children":[]},{"type":"text","value":" 배포와 릴리즈 분리"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"전체적인-흐름","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%A0%84%EC%B2%B4%EC%A0%81%EC%9D%B8-%ED%9D%90%EB%A6%84","ariaLabel":"전체적인 흐름 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"전체적인 흐름"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"개발"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Git Commit"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Git Push"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"개발자가 해야할 일"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"기능 개발"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"오류 수정"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"새로운 아키텍처 추가"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CI"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"정적 분석"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"테스트 실행"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"패키징"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CD"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"배포"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ci/cd 선택요소"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"pr or push"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"브랜치명"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"스킵"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"배포 형태"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"흐름\n기능 브랜치 해서 푸시하면 ci 실행\n머지하면 cd 실행\n마스터에 푸시 막기"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"제한","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%A0%9C%ED%95%9C","ariaLabel":"제한 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"제한"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"커밋 전 체크 1초"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"풀 리퀘스트 후 테스트 시간 10분"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"머지 후 배포 10초"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"ci","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#ci","ariaLabel":"ci permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"CI"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"coding convention"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"test"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"code profiling\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"lint, coding convention check - static code analyse\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"security check(synk)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"codefactor"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"codecov"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"도커 이미지 보안 스캔하는 서비스 - docker bench for security"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Find bugs or perform static analysis tool - pychecker, pylint"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://semgrep.dev/"},"children":[{"type":"text","value":"semgrep"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/andresz1/size-limit-action"},"children":[{"type":"text","value":"size limit check"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"check test. check coverage"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"pull request with report"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"pull request and code review"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"build"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"[version marking](Team_management#Conventional commits)"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"ci-strategy","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#ci-strategy","ariaLabel":"ci strategy permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"CI strategy"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"실패를 먼저 확인한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"pull request를 보내고 테스트가 실패하는 것을 먼저 달게 하는 템플릿을 만든다"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"진행 결과를 코멘트해준다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"test"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"릴리즈 태그"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"변경된 파일(?)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"배포 결과"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"ci-cookbook","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#ci-cookbook","ariaLabel":"ci cookbook permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"CI cookbook"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"실패 시 메시지"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"if: failure()"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"스킵"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"commit이나 pr에 [ci skip] 또는 [skip ci]를 하면 자동 스킵"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"풀리퀘스트에 코멘트 달기"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"uses: actions/github-script@0.3.0"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"script: github.issues.createComment()"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"테스트 결과 코멘트 달기"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"coveralls 이용. coveralls bot을 레포에 초대해야한다. 잘 안붙는다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"codecov 도 있다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"uses: romeovs/lcov-reporter-action@v0.2.16"}]},{"type":"text","value":"  심플 커버리지 확인"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"pull request, push 상황 체크"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"on: [\"push\", \"pull request\"]"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"pull request 생성"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"uses: repo-sync/pull-request@v2"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"destination_branch, pr_title, pr_body 등 설정"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"변수 여러줄 저장하기"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"go test -cover -v > output.txt\nbody=$(cat output.txt)\n\nbody=\"${body//'%'/'%25'}\"\nbody=\"${body//$'\\n'/'%0A'}\"\nbody=\"${body//$'\\r'/'%0D'}\"\n\necho \"::set-output name=body::$body\""}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"파일에서 읽으려면 예약된 문자들을 입력해줘야 여러 줄로 인식이 됨"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"echo ::set-output name=stdout::`go test -cover -v`"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"stdout을 바로 받으려면 이렇게만 해도 된다"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"cache"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"actions/cache 이용"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"if: steps.cache.outputs.cache-hit != 'true'"}]},{"type":"text","value":" 로 체크"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"terraform 구동"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"uses: hashicorp/setup-terraform@v1"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"terraform cloud 토큰 생성 후 이용 가능"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"docker repository"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"github repository"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"echo \"${{ secrets.GITHUB_TOKEN }}\" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin\nVERSION=$(echo \"${{ github.ref }}\" | sed -e 's,.*/\\(.*\\),\\1,')\ndocker push docker.pkg.github.com/${{ github.repository }}:$VERSION"}]}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"dockerhub repository"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"div","properties":{"className":["gatsby-highlight"],"dataLanguage":"text"},"children":[{"type":"element","tagName":"pre","properties":{"className":["language-text"]},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"uses: docker/login-action@v1\nwith:\n    username:\n    password:"}]}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context"},"children":[{"type":"text","value":"github default context"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/sdras/awesome-actions"},"children":[{"type":"text","value":"awesome-actions"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"jenkins","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#jenkins","ariaLabel":"jenkins permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"jenkins"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"수동 배포도 되는 것이 장점"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"코드 분리 가능 (github action, circle ci는 불가)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"선언형과 groovy같은 스크립티드 문법 중 선택해서 쓸 수 있는데, 선언형으로 안되는\n것들이 있어서 스크립티드를 써야하는 경우가 있다고 한다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Configuration as code 플러그인을 설치하면 코드로 설정 관리 가능"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://tech.kakao.com/2021/07/16/devops-for-msa/"},"children":[{"type":"text","value":"https://tech.kakao.com/2021/07/16/devops-for-msa/"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"pipeline","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#pipeline","ariaLabel":"pipeline permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"pipeline"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"백엔드는 깃 폴더 내에서 작업하고\n푸시하면 이미지가 만들어지고 파이프라인에 들어간다\n디비나 다른 프로그램 사용이 필요할 때 바로바로 사용할 수 있어야 하고, 연결과 내부 확인이 바로 되어야 한다\n개발과 테스트가 자유자재로 되어야 한다\n개발을 하다가 테스트가 필요하면 바로 할 수 있어야 한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"프론트엔드도 깃 폴더 내에서 작업하고\n백엔드의 데이터를 마음대로 가져올 수 있어야 한다\n라이브러리 관리가 되어야 한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"커밋 전 확인할 것"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"커밋 시에 사전체크가 오래 걸리면 업무가 지연된다"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"커밋 후 확인할 것"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"직접 관리할 서버와 서비스를 이용하는 것은 어떻게 나눠야할까\n젠킨스, 깃헙 액션"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"메인서버의 데이터를 바로 테스트용으로 카피할 수 있으면 좋겠다\n그러려면 메인서버의 데이터 자체가 너무 비대해지면 안되겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"세부설정을 할 수 있게 하되, 기본값은 실제 서버값으로 하면 테스트하기 좋지 않을까?\n기본값으로 초기값을 하면 정확한 테스트가 안될 것 같다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"테스트 서버의 자원을 로컬에서 할지 공용 풀에서 할지 선택하면 좋겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"관리페이지 접속 -> 서비스 신청 -> 주소 할당"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"커밋-시-동작-가능한-단위로-한다","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%BB%A4%EB%B0%8B-%EC%8B%9C-%EB%8F%99%EC%9E%91-%EA%B0%80%EB%8A%A5%ED%95%9C-%EB%8B%A8%EC%9C%84%EB%A1%9C-%ED%95%9C%EB%8B%A4","ariaLabel":"커밋 시 동작 가능한 단위로 한다 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"커밋 시 동작 가능한 단위로 한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"한 동작마다? 한 단위마다?\n처음 틀 만들 때는 빠른 개발을 위해 되는대로 작성해놓고 커밋만 따로 쪼개서 하고\n싶은데 가능한가?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"기능에-문제-없는-것이-확인-된-단위로-커밋을-하고-싶다","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EA%B8%B0%EB%8A%A5%EC%97%90-%EB%AC%B8%EC%A0%9C-%EC%97%86%EB%8A%94-%EA%B2%83%EC%9D%B4-%ED%99%95%EC%9D%B8-%EB%90%9C-%EB%8B%A8%EC%9C%84%EB%A1%9C-%EC%BB%A4%EB%B0%8B%EC%9D%84-%ED%95%98%EA%B3%A0-%EC%8B%B6%EB%8B%A4","ariaLabel":"기능에 문제 없는 것이 확인 된 단위로 커밋을 하고 싶다 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"기능에 문제 없는 것이 확인 된 단위로 커밋을 하고 싶다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"기능에 문제가 있는지 없는지는 어떻게 확인할까\n검사하기 좋은 아키텍처를 가지는 것도 중요하겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"정적 테스트가 완료되면 문제 없다고 할 수 있게끔 해야겠다"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CI를 커밋할 때 하는 것보다 PR을 할 때 하면 PR에 결과 표시해주면 한 곳에서 확인할 수 있어서 좋겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"커밋할 때는 짧게 확인 가능한 위주로 테스트하고, PR에서 좀 더 진행하면 좋겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"개발자들이 실제 작업하는 환경을 수시로 확인하는 작업이 필요하다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"pr","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#pr","ariaLabel":"pr permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"pr"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"pr마다 버전을 넣으면 금방 100을 넘을 것 같은데?\n컨테이너 이미지 만들 때 버저닝 같이 하게 된다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"meshkorea","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#meshkorea","ariaLabel":"meshkorea permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"meshkorea"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"젠킨스파일을 각 레파지토리에 추가해서 파일 하나로 CI/CD 작업을 연결한다\ntag 기반으로 젠킨스에 훅을 보낸다\n메뉴얼로 바로 배포하는 옵션도 있다\nkubernetes 레포와 소스코드 레포를 분리했다\nhelm 의 values만 수정해서 관리할 수 있게 했다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"devops","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#devops","ariaLabel":"devops permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"devops"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"개발자로서 데브옵스라면 팀의 소스를 모두 풀링해서 서버에 올리는 것에 신경 쓸\n것이고\n문화로서 데브옵스라면 각 개발자가 서버에 쉽게 올릴 수 있도록 신경 쓸 것이다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"동작은 어차피 서버에서 자동으로 하겠지만,\n개발자가 서버에 어떻게 올릴지 설정을 하게 할지, 아니면 운영자가 설정을 할지의\n선택요소가 남아있다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"개발자가 피드백을 받으려면 개발자가 직접 설정해서 받는쪽이 나을 것 같다\n프로덕션에서 테스트도 해봐야할 것이고,"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"개발자가 설정하되, 파일 하나로 할 수 있고 쉽게 할 수 있도록 해야겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"workflow","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#workflow","ariaLabel":"workflow permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"workflow"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"운영쪽에서 개발코드를 지정할 수도 있고\n개발코드쪽에서 운영쪽으로 푸시할 수도 있고"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"그러고보니 argocd를 실행하는 코드는 개발소스 레파지토리에 등록해서 써야하겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"운영용 레파지토리에서 개발용쪽을 트리거 받는 방법도 있긴 하네"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"젠킨스파일처럼 파일 하나만 폴더에 추가해서\npr요청하면 그 파일이 서버에 훅을 보내서 특정 작업들을 실행하도록 한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"파일에는 세부 설정도 가능하지만 기능 on/off 정도만 해도 되도록 하면 좋지 않을까\nargocd라고 적어놓으면 배포자동화가 되도록"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"코드 푸시하는 곳에서 이슈 리스트를 확인하고 코드를 내려받고, 푸시하면 리포트를\n받아보게 되는 올인원 툴이 있으면 좋겠다\ngithub action 추적도 되고"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"관리 쪽에서 개발소스를 컨텍해서 올리는게 더 안전성이 높지 않을까"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"정적-소스-분석","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%A0%95%EC%A0%81-%EC%86%8C%EC%8A%A4-%EB%B6%84%EC%84%9D","ariaLabel":"정적 소스 분석 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"정적 소스 분석"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"lint check\ntest\nsecure check\nsize check"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"상황 처리"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"push, pull request, 특정 branche만 받기"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"테스트 결과 이슈에 남기기"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"현업에서 필요한 복잡한 CI/CD 구성을 알고 싶다\naws에서 복잡한 구조를 지원하는 것을 어필하기 위해 소개하는 문서가 있을 것 같은데"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"터미널에서 푸시를 하면 깃헙 사이트에 들어가야 진행 상황을 알 수 있다\n그래서 슬랙을 써서 하는 회사들이 있는데\n터미널에서 바로 인터랙티브하게 할 수 없을까"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"actions-cli"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"report","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#report","ariaLabel":"report permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"report"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"소스 코드 정보\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"신규로 추가한 라인 수, 변경된 라인 수, 소스 코드 파일 개수, 커밋 개수 등"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"소스 코드 정적 분석 데이터"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"소스 코드 빌드 데이터\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"작업별 빌드/테스트 시간"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"빌드 성공/실패율, 빌드 로그"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"빌드 테스트 리포트, 패키지(APK) 정보, 버전 정보"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"빌드 옵션, 메모리 덤프 데이터"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"빌드 태스크 의존성 정보"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"빌드 시스템 정보\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"사용자 시스템 정보(CPU, 메모리)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"CPU 사용량, 메모리 사용량, 디스크 사용량"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"빌드 대기 시간, 빌드 장비 활용 시간"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"패키지 크기"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://engineering.linecorp.com/ko/blog/build-a-continuous-cicd-environment-based-on-data/"},"children":[{"type":"text","value":"https://engineering.linecorp.com/ko/blog/build-a-continuous-cicd-environment-based-on-data/"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"workflow-1","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#workflow-1","ariaLabel":"workflow 1 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"workflow"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"개발 전 - 개발 중 - 개발 후 관리"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"개발 전\n처음 프로젝트 시작 시 필요한 파일\n깃헙 워크플로우\n도커 컴포즈 파일\n깃 훅\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"workflows, pre-commit, PULL-REQUEST 파일 불러오기"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"synk 등 github third party 허가 등록"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"특정 언어 템플릿이나 미들웨어 서버 필요 시 불러오기?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"security 정보 등록"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"개발 중\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"git-cz 등 개발편의용 도구"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"workflows 실행으로 테스트 자동"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"처음에는 infra repo에서 가져와서 서비스를 배포하는데\n서비스별로 별도의 infra가 필요해지면 쉽게 변경 가능해야할까? 아니면 굳이\n안바꾸는 것을 권장해야할까?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"스테이지 서버에서 테스트 후 프로덕션 서버로 카나리 배포, 롤링 업데이트를 하게\n될텐데 이 설정들은 infra repo에 고정적으로 있으면 되나?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ci/cd에서 하는 것이 배포 위치 지정(dev, prod 지정),"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"cd","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#cd","ariaLabel":"cd permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"CD"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"hotfix"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"integration each other"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"how to test connection with each other services"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"스테이지 서버"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"rolling deploy -- kubernetes support"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"imagine-of-erp-cicd","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#imagine-of-erp-cicd","ariaLabel":"imagine of erp cicd permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"imagine of erp CI/CD"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"local docker test\ncommit -> push -> deploy -> docker image update"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"what if production has error?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"how to make fast hot-fix?\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"fixing with a test case"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"feedback","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#feedback","ariaLabel":"feedback permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Feedback"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Measure Code, server(package), user experience to github issue"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Code static is reported in CI cycle."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"package is reported in CD cycle"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Error time, count, environment,"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"code-static-analyze-content","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#code-static-analyze-content","ariaLabel":"code static analyze content permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Code static analyze content"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Dead branch check (long time)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Lint check"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Security check"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Dependency check"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Execute time check"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"deploy-make-easy","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#deploy-make-easy","ariaLabel":"deploy make easy permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"deploy make easy"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"one directory to push"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"many program related"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"update to be small"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"test to be all"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"quick rollback"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"배포","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%B0%B0%ED%8F%AC","ariaLabel":"배포 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"배포"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"argocd에서 쿠버네티스 템플릿을 가지고 있고,\n코드 레포지토리에서는 이미지만 빌드하도록 하면 좋을까"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"배포-자동화","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%B0%B0%ED%8F%AC-%EC%9E%90%EB%8F%99%ED%99%94","ariaLabel":"배포 자동화 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"배포 자동화"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"docker package"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"maven package"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"exe 파일로 package"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"ansible로 로컬 배포"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"terraform으로 클라우드 배포"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"docker 패키징"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"argocd"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CD 로 로컬 서버에 배포하는 작업 보안 확인"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"상황-1","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%83%81%ED%99%A9-1","ariaLabel":"상황 1 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"상황 1"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"개인 프로젝트로 go web server를 구축하여 원격 서버에 배포"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"브랜치별 개발 - 푸시 - 정적 테스트 - 배포 - 릴리즈"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"릴리즈 된 것이 개발에 바로 피드백을 줘야 한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"테스트 실패"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"배포 실패"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"릴리즈 실패"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"릴리즈 시 특정 동작 문제 발생"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이슈 보고"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"에러가 생각나서 긴급 수정"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"리소스 부족"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"외부 라이브러리 문제 발생"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"상황-2","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%83%81%ED%99%A9-2","ariaLabel":"상황 2 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"상황 2"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"10인 개발팀이 개발은 compose로 진행하고 배포를 argocd로 배포"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"권한 관리 (개발팀이 경영팀에 마음대로 들여다 볼 필요 없음)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"휴먼 에러 방지"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"상황-3","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%83%81%ED%99%A9-3","ariaLabel":"상황 3 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"상황 3"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"3개의 실제서버를 구성해놓고\n오토 스케일링 하도록 한다\n업데이트시 롤링 업데이트를 기반으로 하는데\n하나를 카나리로 설정한 다음 서버별 접속 링크를 제공해서 접속현황과 실제 테스트를 진행할 수 있게 한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"개발서버 - 실제서버\n단계로 바로 갈 수 있게 하고\n개발서버에서 각 파트가 다른파트에 영향을 최대한 안주도록 한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"깃 푸시하면 도커로 테스트하고 풀리퀘스트 머지를 하면 바로 실제서버로 가게하거나 배포 시기를 정해놓는다면 배포큐에 쌓아놓는다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"edge-case","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#edge-case","ariaLabel":"edge case permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"edge case"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"로그 폭발\n권한 남용\n시스템 다운\n네트워크 혼잡"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"reference","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#reference","ariaLabel":"reference permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"reference"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://blogs.oracle.com/developers/adventures-in-cicd-3-running-tests-publishing-test-reports"},"children":[{"type":"text","value":"https://blogs.oracle.com/developers/adventures-in-cicd-3-running-tests-publishing-test-reports"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"test, failure check,"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.aaron-powell.com/posts/2020-03-23-approval-workflows-with-github-actions/"},"children":[{"type":"text","value":"https://www.aaron-powell.com/posts/2020-03-23-approval-workflows-with-github-actions/"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"set version, create version file, approval workflows"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://johnny-mh.github.io/post/standard-version-%EA%B8%B0%EB%B0%98-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%B0%B0%ED%8F%AC%ED%94%84%EB%A1%9C%EC%84%B8%EC%8A%A4"},"children":[{"type":"text","value":"https://johnny-mh.github.io/post/standard-version-기반-서비스-배포프로세스"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"commitizen, standard-version, ci pr check, cdn 업로드(?)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"frontend는 index.html만 배포하면 되겠다. 컨테이너보다 훨씬 가볍다"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://shivanshs9.me/medium/do-github-acti"},"children":[{"type":"text","value":"https://shivanshs9.me/medium/do-github-acti"}]},{"type":"text","value":" on-like-a-pro-594bcb813b22"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://ahnheejong.name/articles/web-developers-flutter-cicd-using-travis-ci/"},"children":[{"type":"text","value":"https://ahnheejong.name/articles/web-developers-flutter-cicd-using-travis-ci/"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://woowabros.github.io/experience/2018/06/26/bros-cicd.html"},"children":[{"type":"text","value":"https://woowabros.github.io/experience/2018/06/26/bros-cicd.html"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"slack bot으로 배포 알림, 릴리즈 확인"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.theteams.kr/teams/7242/post/70736"},"children":[{"type":"text","value":"https://www.theteams.kr/teams/7242/post/70736"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"development, qa, deployment로 프로세스 구분"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.slideshare.net/awskorea/cicd-aws-aws-aws-summit-seoul-2019"},"children":[{"type":"text","value":"https://www.slideshare.net/awskorea/cicd-aws-aws-aws-summit-seoul-2019"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"소스 빌드 테스트 프로덕션으로 프로세스 구분"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://roseline.oopy.io/dev/github-action-cahce"},"children":[{"type":"text","value":"https://roseline.oopy.io/dev/github-action-cahce"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"size-limit-check 해주는 js용 action이 있다"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://velog.io/@hax0r/Node-%ED%94%84%EB%A1%9C%EB%8D%95%ED%8A%B8-%ED%80%84%EB%A6%AC%ED%8B%B0%EB%A5%BC-%EB%86%92%EC%9D%B4%EB%8A%94-%ED%98%91%EC%97%85-%EB%B0%A9%EB%B2%95-q29zo12w"},"children":[{"type":"text","value":"https://velog.io/@hax0r/Node-프로덕트-퀄리티를-높이는-협업-방법-q29zo12w"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"commitlint, semantic release, husky 사용하자"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://engineering.linecorp.com/ko/blog/line-ads-devops-culture/"},"children":[{"type":"text","value":"Line"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"기획, 코드, 빌드, 테스트, 릴리스, 배포, 운영, 모니터링"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"기획 - confluence로 관리, kanban에 이슈 매칭, jira로 이슈 트래킹"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"코드 - git-flow를 간소화해서 develop에 featrue를 붙여 개발 후 master에 병합\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"코드리뷰 - 이슈트래커 번호, 1명의 승인 필요"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"빌드, 테스트 - 언어별 기본 test, 요청 응답 테스트, 두 장비가 요청을 보내\n같은 결과를 보내는지 비교(api comparator)\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"PR 생성, 변경 시 단위 테스트"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"상위 브런치에 머지했을 때 API 테스트"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"특정 주기마다 테스트 반복\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"단위 테스트 실패 시 머지 불가 조건"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"릴리즈, 배포 - 위에서 검증 완료되었는지 한번 더 확인\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"kanban에서 confirm상태가 됐는지 확인하고 deploy로 상태 변경"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"배포 전에 변경 공지를 등록하고 어떤 변경사항인지 관리자와 공유(메신저)"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"배포 시작되면 전체 공유"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"카나리로 배포, 1대에 배포 후 모니터링 되면 3분의 1부터 배포\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"장애 발생 시 이전 상태로 재배포. PR revert, Tag 제거"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://blog.banksalad.com/tech/become-an-organization-that-deploys-1000-times-a-day/"},"children":[{"type":"text","value":"banksalad"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"pr 횟수를 모니터링, slack의 대화내용에서 파싱"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"git-flow를 간소화"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"gomplate"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"build - lint, test, docker image build"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"deploy용 bot을 만들어 사용\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"status, deploy, history 기능 지원"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"github이나-jenkins-travis에서-cicd-노하우를-공유할-것-같은데","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#github%EC%9D%B4%EB%82%98-jenkins-travis%EC%97%90%EC%84%9C-cicd-%EB%85%B8%ED%95%98%EC%9A%B0%EB%A5%BC-%EA%B3%B5%EC%9C%A0%ED%95%A0-%EA%B2%83-%EA%B0%99%EC%9D%80%EB%8D%B0","ariaLabel":"github이나 jenkins travis에서 cicd 노하우를 공유할 것 같은데 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"github이나 jenkins, travis에서 ci/cd 노하우를 공유할 것 같은데"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"찾아보자"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://blog.travis-ci.com/"},"children":[{"type":"text","value":"travis ci blog"}]}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"ci-cd-pipeline","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#ci-cd-pipeline","ariaLabel":"ci cd pipeline permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"ci cd pipeline"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"그러면 이번 장에서는 이런 현대의 서버 개발 환경이 어떻게 구성되는지를 살펴보기로 한다.\n다음과 같은 시나리오를 생각해보자.\n\"개발자가 아침에 출근해서 책상 앞에 앉아서 노트북을 켜고 로그인을 한다. IDE 도구인\n이클립스를 실행하면 이슈 트랙킹 도구와 연결되어 오늘 해야 할 일들이 자동으로 리스\n트 업 된다. 개발자는 그중에서 하나의 태스크를 가져와서 내용을 확인한다. 해당 태스크\n의 상태를 진행 중(In Progress) 상태로 바꾸고, 소스 코드 관리 시스템에서 최신 소스 코\n드를 내려받는다. 로직을 구현하고, 코드를 검증하기 위해서 단위 테스트 코드를 작성하여\n테스트까지 수행한 후 정상적으로 작동하는 것을 확인한 후에 다시 소스 코드 관리 시스템\n에 코드를 반영 요청을 한다.\n반영 요청을 즉시, 자신의 선배 개발자에게 통보가 되고 선배 개발자는 해당 개발자가 변\n경한 코드의 내용을 형상관리 시스템에서 확인하고 시스템을 통해서 코드에 대한 피드백\n을 적어 놓는다. 코드 상에 문제가 없으면 코드 반영을 허가하고 변경 부분은 전체 소스 관\n리 시스템에 반영된다.\n코드가 반영되면 중앙화된 자동 빌드 시스템에서 코드를 내려받아서 컴파일 및 테스트 서\n버에 자동으로 배포하고, 이미 정의된 테스트를 수행한다. 테스트가 끝나면 전체 소스 코\n드 줄 수 중에 어느 줄이 테스트가 되었는지, 전체 코드 중 테스트 된 줄 수의 비율 등을\n자동으로 측정해서 리포트를 생성해 준다. 또한, 자동화된 규칙에 따라서 코드 상에 에러\n처리가 안 된 부분이나 명명 규칙(Naming Rule)이 틀린 부분을 자동 검출하여 팀원에게\n알려준다.\n모든 빌드와 테스트가 끝나면 해당 코드는 스테이징 (Staging) 환경으로 자동 배포가 되\n고, 변경 부분은 QA 팀에 의해서 테스트를 거친 후에, 매일 밤에 운영 시스템에 반영된다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"(책) 조대협"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"etc","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#etc","ariaLabel":"etc permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"etc"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"웹에서는 리액트를 쓰든, wasm를 쓰든 결국 최종 출력물은 HTML이다. + js,css"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"script 보다 workflows를 활용?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"jenkins, github action, travis에 상관없이 ci를 실행하게 하려면 스크립트로\n단계를 만드는게 좋을까? 근데 스크립트를 안쓰려고 ci툴을 쓰는건데..."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"workflow 실패 시 에러 메시지와 함께 피드백 주는 방법 확인"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"시맨틱 버저닝에서 버그 픽스와 피쳐 추가가 같이 있으면 버그 픽스 태그 따로, 피쳐\n추가 태그 따로 올리는게 맞지 않나?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"deploy","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#deploy","ariaLabel":"deploy permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"Deploy"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"infra와-source를-분리","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#infra%EC%99%80-source%EB%A5%BC-%EB%B6%84%EB%A6%AC","ariaLabel":"infra와 source를 분리 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"infra와 source를 분리"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"쿠버네티스 테스트 레포지토리와 myspace 레포지토리를 분리하고\nMyspace의 폴더가 곧 프로젝트 목록이 되도록 구성"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Basic 폴더를 만들어서 이를 복사해서 쓰도록한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Argocd에서 폴더를 등록한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"배포 완료"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"인프라 코드도 개발자가 관리하도록 하기 위함.\n개발 코드는 컨테이너 이미지 배포하기까지 자동"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Prefix로 infra 서비스와 비즈니스 서비스 구분"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"argocd를 github action에서 실행한다면\n소스코드와 인프라코드가 분리되있는데\n소스코드 변경을 인프라가 어떻게 알아차릴 수 있지?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"소스코드 변경 후 인프라를 다시 건드리면 안된다\n인프라는 인프라대로 관리되고, 소프트웨어 업데이트는 소스코드에서 따로 처리되야 한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"인프라 변경 시 변경될 것은 쿠버네티스 셋팅, 서버 셋팅\n소스 변경 시 변경될 것은 소프트웨어 버전, 세부 설정"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"둘 다 쿠버네티스 어플라이를 해야되는 건 같다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"인프라 생성 시 argocd 등록 되도록 하고, 그게 소스코드를 보도록 하면 될까?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"레포지토리 생성"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"도커 빌드"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"인프라 레포에서 폴더 생성"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"argocd 싱크 등록을 1 레포지토리로 등록"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"레포지토리 업데이트"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"argocd 동작"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"deploy-1","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#deploy-1","ariaLabel":"deploy 1 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"deploy"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"서버의 kube config를 가져온다 - private key를 github secret에 등록시키고 scp를\n이용한다\n변경된 파일을 인식해서 apply 한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"인프라에서 추가를 하면 서비스에 설정파일을 주입한다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"서비스에서 간단한 파일이라도 추가해서 신호를 준다"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"관건은 서비스를 업데이트 했을 때 따로 설정 없이 인프라가 알아챌 수 있는지인데"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"cron을 계속 한다? 무리...\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"argocd도 근데 레포지토리를 cron하는 방식 아닌가?"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"argocd로 배포를 하면 처음 등록만 수동으로 해주면 된다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"kubernetes를 워크플로우에서 동작하면 argocd 필요 없다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"argocd가 소스코드 변경을 보는게 아니라 yaml 파일을 보는거라..."}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"지금은 일단 elasticsearch에 dockerfile 빌드할 때 synonym 파일을 집어넣었다\n이러면 github과 연동이 안되어서 버전 업데이트 할 때 날아간다.\n대응 방법을 생각해야 한다\n쿠버네티스 로컬에서 볼륨을 만들어서 연결해도 github에 업데이트는 못한다\ncron으로 파일을 파싱해야 할까. 매일 한번씩 카피해서 올려도 될듯"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"kubernetes 같은 네임스페이스에서 연결하는 방법은?\n서비스로 클러스터 ip는 오픈\n서비스 이름으로 인식은 한다.\n그러면 서버에서 호스트 명을 서비스명과 맞춰줘야 한다."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"argocd","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#argocd","ariaLabel":"argocd permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"argocd"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"terraform 으로 master ip 얻어서 argocd 마스터로 전달\n인프라 레포에서는 생성만 하고, 싱크는 argocd가 github을 보면서 할 수 있나?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"서비스 레포에서 푸시 -> 도커 이미지 변경 -> 인프라 레포에서 변경 인식\n-> argocd sync"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"소스 레파지토리에서 인프라 레파지토리의 버전값을 변경하고 푸시하는 방식으로"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"사용하더라"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"argocd에서 kubernetes.local로 접속하는게 어디?"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"배포-1","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%B0%B0%ED%8F%AC-1","ariaLabel":"배포 1 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"배포"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"스테이징 서버 없이 카나리로 테스트\n실제환경에서 카나리 테스트"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"데이터에 문제 생길 것에 대비해서 업데이트 시 스냅샷을 찍어놓고 찍은 후 생긴\n데이터를 따로 더할 수 있게한다\n문제가 생기면 스냅샷으로 롤백하고 추가된 데이터를 더한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"스냅샷과 데이터복구가 잘 되는지 검증한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"canary-release","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#canary-release","ariaLabel":"canary release permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"canary release"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"카나리 배포를 할 때 프로덕션에 할 게 아니라 내부 서버로 카나리를 해놓으면\n검사하기 더 수월할까?\n프로덕션에서 테스트하는 것이 내부에서 보는 것과 차이가 없을까?\n프로덕션에서의 환경을 봐야하기 때문에 프로덕션을 봐야할까?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"스테이징-대신-카나리로-직접-테스트","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%8A%A4%ED%85%8C%EC%9D%B4%EC%A7%95-%EB%8C%80%EC%8B%A0-%EC%B9%B4%EB%82%98%EB%A6%AC%EB%A1%9C-%EC%A7%81%EC%A0%91-%ED%85%8C%EC%8A%A4%ED%8A%B8","ariaLabel":"스테이징 대신 카나리로 직접 테스트 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"스테이징 대신 카나리로 직접 테스트"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"그러면 카나리 하다가 전체가 문제가 생기면 어떻게 하냐는 걱정 생긴다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"격리를 잘 하고, 고가용성을 챙기고\n데이터 변경으로 인한 영향이 없도록 해야한다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"먼저 쿠버네티스, 깃헙을 이용해 개발하다가\n팀이 따로 분리되어 전문화 되면 비로소 자체 시스템이 필요하지 않을까"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"처음에는 여러 역할이 한 팀에 있고, 이 팀들을 관리하는 팀이 있는 구조에서\n팀을 관리하는 팀을 관리하는 팀이 필요해지는 시점 정도부터 세부적인 팀의 분리를 하던가, 상위팀이 하위 팀을 위한 툴을 개발하는 팀으로 역할을 하던가 하면 되지 않을까"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"다른-버전을-사람들이-쓰면-문제가-생긴다","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%8B%A4%EB%A5%B8-%EB%B2%84%EC%A0%84%EC%9D%84-%EC%82%AC%EB%9E%8C%EB%93%A4%EC%9D%B4-%EC%93%B0%EB%A9%B4-%EB%AC%B8%EC%A0%9C%EA%B0%80-%EC%83%9D%EA%B8%B4%EB%8B%A4","ariaLabel":"다른 버전을 사람들이 쓰면 문제가 생긴다 permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"다른 버전을 사람들이 쓰면 문제가 생긴다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"특히 db 처리에서 차이가 있으면 그렇겠다\n롤링업데이트는 괜찮은게 맞나?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"어댑터 패턴이라는 것이 있다\n점진적 업데이트 시 이전 버전의 데이터를 갖고 있다가 출력을 바꿔주는 식"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"카나리를 먼저 하고 롤링 업데이트를 하면 되지 않을까?\ndb 같은 업데이트는 카나리로 하는게 좋겠다"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{"id":"without-stage-server","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#without-stage-server","ariaLabel":"without stage server permalink","className":["anchor","before"]},"children":[{"type":"element","tagName":"svg","properties":{"ariaHidden":"true","focusable":"false","height":"16","version":"1.1","viewBox":"0 0 16 16","width":"16"},"children":[{"type":"element","tagName":"path","properties":{"fillRule":"evenodd","d":"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"},"children":[]}]}]},{"type":"text","value":"without stage server"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I want to make only 2 stages environment\ndevelopment & production"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"what is problem"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"staging server need exist?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"production safe"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"production server has problem"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"managing critical data"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"real world simulation"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if in kubernetes. staging server is not problem. just one more pods?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"is it over-resource?\nCD pipeline can replace staging server?"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"gitflow"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"master, dev, release, stage, hotfix -- too much"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"dev, test, stage, prod -- too much"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"multi stage is require?"}]},{"type":"text","value":"\n"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"can parsing data from every node?"}]}],"data":{"quirksMode":false}},"rawMarkdownBody":"\n## 개요\n상황 1. 개인 프로젝트로 go web server를 구축하여 원격 서버에 배포\n\n상황 2. 10인 개발팀이 개발은 compose로 진행하고 배포를 argocd로 배포\n\n상황 3. 3명의 개발자가 terraform으로 인프라 관리 및 배포\n\n- [ ] 배포와 릴리즈 분리\n\n\n## 전체적인 흐름\n개발\n- Git Commit\n- Git Push\n\n개발자가 해야할 일\n- 기능 개발\n- 오류 수정\n- 새로운 아키텍처 추가\n\nCI\n- 정적 분석\n- 테스트 실행\n- 패키징\n\nCD\n- 배포\n\nci/cd 선택요소\n- pr or push\n- 브랜치명\n- 스킵\n- 배포 형태\n\n흐름\n기능 브랜치 해서 푸시하면 ci 실행\n머지하면 cd 실행\n마스터에 푸시 막기\n\n\n#### 제한\n- 커밋 전 체크 1초\n- 풀 리퀘스트 후 테스트 시간 10분\n- 머지 후 배포 10초\n\n## CI\n- coding convention\n- test\n- code profiling\n\t* lint, coding convention check - static code analyse\n\t\t* security check(synk)\n        * codefactor\n        * codecov\n        * 도커 이미지 보안 스캔하는 서비스 - docker bench for security\n        * Find bugs or perform static analysis tool - pychecker, pylint\n        * [semgrep](https://semgrep.dev/)\n    * [size limit check](https://github.com/andresz1/size-limit-action)\n\t* check test. check coverage\n- pull request with report\n- pull request and code review\n- build\n- [version marking](Team_management#Conventional commits)\n\n#### CI strategy\n실패를 먼저 확인한다\n- pull request를 보내고 테스트가 실패하는 것을 먼저 달게 하는 템플릿을 만든다\n\n진행 결과를 코멘트해준다\n- test\n- 릴리즈 태그\n- 변경된 파일(?)\n- 배포 결과\n\n#### CI cookbook\n- 실패 시 메시지\n    - `if: failure()`\n- 스킵\n    - commit이나 pr에 [ci skip] 또는 [skip ci]를 하면 자동 스킵\n- 풀리퀘스트에 코멘트 달기\n    - `uses: actions/github-script@0.3.0`\n    - `script: github.issues.createComment()`\n- 테스트 결과 코멘트 달기\n    - coveralls 이용. coveralls bot을 레포에 초대해야한다. 잘 안붙는다\n    - codecov 도 있다\n    - `uses: romeovs/lcov-reporter-action@v0.2.16`  심플 커버리지 확인\n- pull request, push 상황 체크\n    - `on: [\"push\", \"pull request\"]`\n- pull request 생성\n    - `uses: repo-sync/pull-request@v2`\n    - destination_branch, pr_title, pr_body 등 설정\n- 변수 여러줄 저장하기\n    ```\n    go test -cover -v > output.txt\n    body=$(cat output.txt)\n\n    body=\"${body//'%'/'%25'}\"\n    body=\"${body//$'\\n'/'%0A'}\"\n    body=\"${body//$'\\r'/'%0D'}\"\n\n    echo \"::set-output name=body::$body\"\n    ```\n    - 파일에서 읽으려면 예약된 문자들을 입력해줘야 여러 줄로 인식이 됨\n    ```\n    echo ::set-output name=stdout::`go test -cover -v`\n    ```\n    - stdout을 바로 받으려면 이렇게만 해도 된다\n- cache\n    - actions/cache 이용\n    - `if: steps.cache.outputs.cache-hit != 'true'` 로 체크\n- terraform 구동\n    - `uses: hashicorp/setup-terraform@v1`\n    - terraform cloud 토큰 생성 후 이용 가능\n- docker repository\n    - github repository\n    ```\n    echo \"${{ secrets.GITHUB_TOKEN }}\" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin\n    VERSION=$(echo \"${{ github.ref }}\" | sed -e 's,.*/\\(.*\\),\\1,')\n    docker push docker.pkg.github.com/${{ github.repository }}:$VERSION\n    ```\n    - dockerhub repository\n    ```\n    uses: docker/login-action@v1\n    with:\n        username:\n        password:\n    ```\n\n- [github default context](https://docs.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#github-context)\n- [awesome-actions](https://github.com/sdras/awesome-actions)\n\n#### jenkins\n수동 배포도 되는 것이 장점\n\n코드 분리 가능 (github action, circle ci는 불가)\n\n선언형과 groovy같은 스크립티드 문법 중 선택해서 쓸 수 있는데, 선언형으로 안되는\n것들이 있어서 스크립티드를 써야하는 경우가 있다고 한다.\n\nConfiguration as code 플러그인을 설치하면 코드로 설정 관리 가능\n- https://tech.kakao.com/2021/07/16/devops-for-msa/\n\n#### pipeline\n백엔드는 깃 폴더 내에서 작업하고\n푸시하면 이미지가 만들어지고 파이프라인에 들어간다\n디비나 다른 프로그램 사용이 필요할 때 바로바로 사용할 수 있어야 하고, 연결과 내부 확인이 바로 되어야 한다\n개발과 테스트가 자유자재로 되어야 한다\n개발을 하다가 테스트가 필요하면 바로 할 수 있어야 한다\n\n프론트엔드도 깃 폴더 내에서 작업하고\n백엔드의 데이터를 마음대로 가져올 수 있어야 한다\n라이브러리 관리가 되어야 한다\n\n커밋 전 확인할 것\n- 커밋 시에 사전체크가 오래 걸리면 업무가 지연된다\n커밋 후 확인할 것\n\n직접 관리할 서버와 서비스를 이용하는 것은 어떻게 나눠야할까\n젠킨스, 깃헙 액션\n\n메인서버의 데이터를 바로 테스트용으로 카피할 수 있으면 좋겠다\n그러려면 메인서버의 데이터 자체가 너무 비대해지면 안되겠다\n\n세부설정을 할 수 있게 하되, 기본값은 실제 서버값으로 하면 테스트하기 좋지 않을까?\n기본값으로 초기값을 하면 정확한 테스트가 안될 것 같다\n\n테스트 서버의 자원을 로컬에서 할지 공용 풀에서 할지 선택하면 좋겠다\n\n관리페이지 접속 -> 서비스 신청 -> 주소 할당\n\n#### 커밋 시 동작 가능한 단위로 한다\n한 동작마다? 한 단위마다?\n처음 틀 만들 때는 빠른 개발을 위해 되는대로 작성해놓고 커밋만 따로 쪼개서 하고\n싶은데 가능한가?\n\n#### 기능에 문제 없는 것이 확인 된 단위로 커밋을 하고 싶다\n기능에 문제가 있는지 없는지는 어떻게 확인할까\n검사하기 좋은 아키텍처를 가지는 것도 중요하겠다\n- 정적 테스트가 완료되면 문제 없다고 할 수 있게끔 해야겠다\n\nCI를 커밋할 때 하는 것보다 PR을 할 때 하면 PR에 결과 표시해주면 한 곳에서 확인할 수 있어서 좋겠다\n\n커밋할 때는 짧게 확인 가능한 위주로 테스트하고, PR에서 좀 더 진행하면 좋겠다\n\n개발자들이 실제 작업하는 환경을 수시로 확인하는 작업이 필요하다\n\n#### pr\npr마다 버전을 넣으면 금방 100을 넘을 것 같은데?\n컨테이너 이미지 만들 때 버저닝 같이 하게 된다\n\n#### meshkorea\n젠킨스파일을 각 레파지토리에 추가해서 파일 하나로 CI/CD 작업을 연결한다\ntag 기반으로 젠킨스에 훅을 보낸다\n메뉴얼로 바로 배포하는 옵션도 있다\nkubernetes 레포와 소스코드 레포를 분리했다\nhelm 의 values만 수정해서 관리할 수 있게 했다\n\n#### devops\n개발자로서 데브옵스라면 팀의 소스를 모두 풀링해서 서버에 올리는 것에 신경 쓸\n것이고\n문화로서 데브옵스라면 각 개발자가 서버에 쉽게 올릴 수 있도록 신경 쓸 것이다\n\n동작은 어차피 서버에서 자동으로 하겠지만,\n개발자가 서버에 어떻게 올릴지 설정을 하게 할지, 아니면 운영자가 설정을 할지의\n선택요소가 남아있다\n\n개발자가 피드백을 받으려면 개발자가 직접 설정해서 받는쪽이 나을 것 같다\n프로덕션에서 테스트도 해봐야할 것이고,\n\n개발자가 설정하되, 파일 하나로 할 수 있고 쉽게 할 수 있도록 해야겠다\n\n#### workflow\n운영쪽에서 개발코드를 지정할 수도 있고\n개발코드쪽에서 운영쪽으로 푸시할 수도 있고\n\n그러고보니 argocd를 실행하는 코드는 개발소스 레파지토리에 등록해서 써야하겠다\n- 운영용 레파지토리에서 개발용쪽을 트리거 받는 방법도 있긴 하네\n젠킨스파일처럼 파일 하나만 폴더에 추가해서\npr요청하면 그 파일이 서버에 훅을 보내서 특정 작업들을 실행하도록 한다\n\n파일에는 세부 설정도 가능하지만 기능 on/off 정도만 해도 되도록 하면 좋지 않을까\nargocd라고 적어놓으면 배포자동화가 되도록\n\n\n코드 푸시하는 곳에서 이슈 리스트를 확인하고 코드를 내려받고, 푸시하면 리포트를\n받아보게 되는 올인원 툴이 있으면 좋겠다\ngithub action 추적도 되고\n\n관리 쪽에서 개발소스를 컨텍해서 올리는게 더 안전성이 높지 않을까\n\n## 정적 소스 분석\nlint check\ntest\nsecure check\nsize check\n\n상황 처리\n- push, pull request, 특정 branche만 받기\n\n테스트 결과 이슈에 남기기\n\n현업에서 필요한 복잡한 CI/CD 구성을 알고 싶다\naws에서 복잡한 구조를 지원하는 것을 어필하기 위해 소개하는 문서가 있을 것 같은데\n\n터미널에서 푸시를 하면 깃헙 사이트에 들어가야 진행 상황을 알 수 있다\n그래서 슬랙을 써서 하는 회사들이 있는데\n터미널에서 바로 인터랙티브하게 할 수 없을까\n- actions-cli\n\n#### report\n- 소스 코드 정보\n    - 신규로 추가한 라인 수, 변경된 라인 수, 소스 코드 파일 개수, 커밋 개수 등\n- 소스 코드 정적 분석 데이터\n- 소스 코드 빌드 데이터\n    - 작업별 빌드/테스트 시간\n    - 빌드 성공/실패율, 빌드 로그\n    - 빌드 테스트 리포트, 패키지(APK) 정보, 버전 정보\n    - 빌드 옵션, 메모리 덤프 데이터\n    - 빌드 태스크 의존성 정보\n- 빌드 시스템 정보\n    - 사용자 시스템 정보(CPU, 메모리)\n    - CPU 사용량, 메모리 사용량, 디스크 사용량\n    - 빌드 대기 시간, 빌드 장비 활용 시간\n- 패키지 크기\n- https://engineering.linecorp.com/ko/blog/build-a-continuous-cicd-environment-based-on-data/\n\n#### workflow\n개발 전 - 개발 중 - 개발 후 관리\n- 개발 전\n    처음 프로젝트 시작 시 필요한 파일\n    깃헙 워크플로우\n    도커 컴포즈 파일\n    깃 훅\n  - workflows, pre-commit, PULL-REQUEST 파일 불러오기\n  - synk 등 github third party 허가 등록\n  - 특정 언어 템플릿이나 미들웨어 서버 필요 시 불러오기?\n  - security 정보 등록\n- 개발 중\n  - git-cz 등 개발편의용 도구\n  - workflows 실행으로 테스트 자동\n\n처음에는 infra repo에서 가져와서 서비스를 배포하는데\n서비스별로 별도의 infra가 필요해지면 쉽게 변경 가능해야할까? 아니면 굳이\n안바꾸는 것을 권장해야할까?\n\n스테이지 서버에서 테스트 후 프로덕션 서버로 카나리 배포, 롤링 업데이트를 하게\n될텐데 이 설정들은 infra repo에 고정적으로 있으면 되나?\n\nci/cd에서 하는 것이 배포 위치 지정(dev, prod 지정),\n\n-----------------------------------------------------------------------\n\n## CD\n- hotfix\n- integration each other\n- how to test connection with each other services\n- 스테이지 서버\n- rolling deploy -- kubernetes support\n\n#### imagine of erp CI/CD\nlocal docker test\ncommit -> push -> deploy -> docker image update\n- what if production has error?\n- how to make fast hot-fix?\n\t* fixing with a test case\n\n#### Feedback\n* Measure Code, server(package), user experience to github issue\n* Code static is reported in CI cycle.\n* package is reported in CD cycle\n* Error time, count, environment,\n\n#### Code static analyze content\n* Dead branch check (long time)\n* Lint check\n* Security check\n* Dependency check\n* Execute time check\n\n#### deploy make easy\n- one directory to push\n- many program related\n- update to be small\n- test to be all\n- quick rollback\n\n#### 배포\nargocd에서 쿠버네티스 템플릿을 가지고 있고,\n코드 레포지토리에서는 이미지만 빌드하도록 하면 좋을까\n\n## 배포 자동화\n- docker package\n- maven package\n- exe 파일로 package\n\n- ansible로 로컬 배포\n- terraform으로 클라우드 배포\n- docker 패키징\n- argocd\n\nCD 로 로컬 서버에 배포하는 작업 보안 확인\n\n-----------------------------------------------------------------------\n\n### 상황 1\n개인 프로젝트로 go web server를 구축하여 원격 서버에 배포\n\n브랜치별 개발 - 푸시 - 정적 테스트 - 배포 - 릴리즈\n\n릴리즈 된 것이 개발에 바로 피드백을 줘야 한다\n\n테스트 실패\n\n배포 실패\n\n릴리즈 실패\n\n릴리즈 시 특정 동작 문제 발생\n\n이슈 보고\n\n에러가 생각나서 긴급 수정\n\n리소스 부족\n\n외부 라이브러리 문제 발생\n\n\n### 상황 2\n10인 개발팀이 개발은 compose로 진행하고 배포를 argocd로 배포\n\n권한 관리 (개발팀이 경영팀에 마음대로 들여다 볼 필요 없음)\n\n휴먼 에러 방지\n\n\n## 상황 3\n3개의 실제서버를 구성해놓고\n오토 스케일링 하도록 한다\n업데이트시 롤링 업데이트를 기반으로 하는데\n하나를 카나리로 설정한 다음 서버별 접속 링크를 제공해서 접속현황과 실제 테스트를 진행할 수 있게 한다\n\n개발서버 - 실제서버\n단계로 바로 갈 수 있게 하고\n개발서버에서 각 파트가 다른파트에 영향을 최대한 안주도록 한다\n\n깃 푸시하면 도커로 테스트하고 풀리퀘스트 머지를 하면 바로 실제서버로 가게하거나 배포 시기를 정해놓는다면 배포큐에 쌓아놓는다\n\n\n#### edge case\n로그 폭발\n권한 남용\n시스템 다운\n네트워크 혼잡\n\n\n#### reference\n- https://blogs.oracle.com/developers/adventures-in-cicd-3-running-tests-publishing-test-reports\n    - test, failure check,\n- https://www.aaron-powell.com/posts/2020-03-23-approval-workflows-with-github-actions/\n    - set version, create version file, approval workflows\n- https://johnny-mh.github.io/post/standard-version-기반-서비스-배포프로세스\n    - commitizen, standard-version, ci pr check, cdn 업로드(?)\n    - frontend는 index.html만 배포하면 되겠다. 컨테이너보다 훨씬 가볍다\n- https://shivanshs9.me/medium/do-github-acti on-like-a-pro-594bcb813b22\n- https://ahnheejong.name/articles/web-developers-flutter-cicd-using-travis-ci/\n- https://woowabros.github.io/experience/2018/06/26/bros-cicd.html\n    - slack bot으로 배포 알림, 릴리즈 확인\n- https://www.theteams.kr/teams/7242/post/70736\n    - development, qa, deployment로 프로세스 구분\n- https://www.slideshare.net/awskorea/cicd-aws-aws-aws-summit-seoul-2019\n    - 소스 빌드 테스트 프로덕션으로 프로세스 구분\n- https://roseline.oopy.io/dev/github-action-cahce\n    - size-limit-check 해주는 js용 action이 있다\n- https://velog.io/@hax0r/Node-프로덕트-퀄리티를-높이는-협업-방법-q29zo12w\n    - commitlint, semantic release, husky 사용하자\n- [Line](https://engineering.linecorp.com/ko/blog/line-ads-devops-culture/)\n    - 기획, 코드, 빌드, 테스트, 릴리스, 배포, 운영, 모니터링\n    - 기획 - confluence로 관리, kanban에 이슈 매칭, jira로 이슈 트래킹\n    - 코드 - git-flow를 간소화해서 develop에 featrue를 붙여 개발 후 master에 병합\n        - 코드리뷰 - 이슈트래커 번호, 1명의 승인 필요\n    - 빌드, 테스트 - 언어별 기본 test, 요청 응답 테스트, 두 장비가 요청을 보내\n      같은 결과를 보내는지 비교(api comparator)\n        - PR 생성, 변경 시 단위 테스트\n        - 상위 브런치에 머지했을 때 API 테스트\n        - 특정 주기마다 테스트 반복\n            - 단위 테스트 실패 시 머지 불가 조건\n    - 릴리즈, 배포 - 위에서 검증 완료되었는지 한번 더 확인\n        - kanban에서 confirm상태가 됐는지 확인하고 deploy로 상태 변경\n        - 배포 전에 변경 공지를 등록하고 어떤 변경사항인지 관리자와 공유(메신저)\n        - 배포 시작되면 전체 공유\n        - 카나리로 배포, 1대에 배포 후 모니터링 되면 3분의 1부터 배포\n            - 장애 발생 시 이전 상태로 재배포. PR revert, Tag 제거\n- [banksalad](https://blog.banksalad.com/tech/become-an-organization-that-deploys-1000-times-a-day/)\n    - pr 횟수를 모니터링, slack의 대화내용에서 파싱\n    - git-flow를 간소화\n    - gomplate\n    - build - lint, test, docker image build\n    - deploy용 bot을 만들어 사용\n        - status, deploy, history 기능 지원\n\n#### github이나 jenkins, travis에서 ci/cd 노하우를 공유할 것 같은데\n찾아보자\n- [travis ci blog](https://blog.travis-ci.com/)\n\n#### ci cd pipeline\n그러면 이번 장에서는 이런 현대의 서버 개발 환경이 어떻게 구성되는지를 살펴보기로 한다.\n다음과 같은 시나리오를 생각해보자.\n\"개발자가 아침에 출근해서 책상 앞에 앉아서 노트북을 켜고 로그인을 한다. IDE 도구인\n이클립스를 실행하면 이슈 트랙킹 도구와 연결되어 오늘 해야 할 일들이 자동으로 리스\n트 업 된다. 개발자는 그중에서 하나의 태스크를 가져와서 내용을 확인한다. 해당 태스크\n의 상태를 진행 중(In Progress) 상태로 바꾸고, 소스 코드 관리 시스템에서 최신 소스 코\n드를 내려받는다. 로직을 구현하고, 코드를 검증하기 위해서 단위 테스트 코드를 작성하여\n테스트까지 수행한 후 정상적으로 작동하는 것을 확인한 후에 다시 소스 코드 관리 시스템\n에 코드를 반영 요청을 한다.\n반영 요청을 즉시, 자신의 선배 개발자에게 통보가 되고 선배 개발자는 해당 개발자가 변\n경한 코드의 내용을 형상관리 시스템에서 확인하고 시스템을 통해서 코드에 대한 피드백\n을 적어 놓는다. 코드 상에 문제가 없으면 코드 반영을 허가하고 변경 부분은 전체 소스 관\n리 시스템에 반영된다.\n코드가 반영되면 중앙화된 자동 빌드 시스템에서 코드를 내려받아서 컴파일 및 테스트 서\n버에 자동으로 배포하고, 이미 정의된 테스트를 수행한다. 테스트가 끝나면 전체 소스 코\n드 줄 수 중에 어느 줄이 테스트가 되었는지, 전체 코드 중 테스트 된 줄 수의 비율 등을\n자동으로 측정해서 리포트를 생성해 준다. 또한, 자동화된 규칙에 따라서 코드 상에 에러\n처리가 안 된 부분이나 명명 규칙(Naming Rule)이 틀린 부분을 자동 검출하여 팀원에게\n알려준다.\n모든 빌드와 테스트가 끝나면 해당 코드는 스테이징 (Staging) 환경으로 자동 배포가 되\n고, 변경 부분은 QA 팀에 의해서 테스트를 거친 후에, 매일 밤에 운영 시스템에 반영된다.\n- (책) 조대협\n\n#### etc\n웹에서는 리액트를 쓰든, wasm를 쓰든 결국 최종 출력물은 HTML이다. + js,css\n\nscript 보다 workflows를 활용?\n\njenkins, github action, travis에 상관없이 ci를 실행하게 하려면 스크립트로\n단계를 만드는게 좋을까? 근데 스크립트를 안쓰려고 ci툴을 쓰는건데...\n\nworkflow 실패 시 에러 메시지와 함께 피드백 주는 방법 확인\n\n시맨틱 버저닝에서 버그 픽스와 피쳐 추가가 같이 있으면 버그 픽스 태그 따로, 피쳐\n추가 태그 따로 올리는게 맞지 않나?\n\n## Deploy\n\n#### infra와 source를 분리\n쿠버네티스 테스트 레포지토리와 myspace 레포지토리를 분리하고\nMyspace의 폴더가 곧 프로젝트 목록이 되도록 구성\n\n1. Basic 폴더를 만들어서 이를 복사해서 쓰도록한다\n2. Argocd에서 폴더를 등록한다\n3. 배포 완료\n\n인프라 코드도 개발자가 관리하도록 하기 위함.\n개발 코드는 컨테이너 이미지 배포하기까지 자동\n\nPrefix로 infra 서비스와 비즈니스 서비스 구분\n\nargocd를 github action에서 실행한다면\n소스코드와 인프라코드가 분리되있는데\n소스코드 변경을 인프라가 어떻게 알아차릴 수 있지?\n\n소스코드 변경 후 인프라를 다시 건드리면 안된다\n인프라는 인프라대로 관리되고, 소프트웨어 업데이트는 소스코드에서 따로 처리되야 한다\n\n인프라 변경 시 변경될 것은 쿠버네티스 셋팅, 서버 셋팅\n소스 변경 시 변경될 것은 소프트웨어 버전, 세부 설정\n\n둘 다 쿠버네티스 어플라이를 해야되는 건 같다.\n\n인프라 생성 시 argocd 등록 되도록 하고, 그게 소스코드를 보도록 하면 될까?\n1. 레포지토리 생성\n2. 도커 빌드\n3. 인프라 레포에서 폴더 생성\n4. argocd 싱크 등록을 1 레포지토리로 등록\n5. 레포지토리 업데이트\n6. argocd 동작\n\n#### deploy\n서버의 kube config를 가져온다 - private key를 github secret에 등록시키고 scp를\n이용한다\n변경된 파일을 인식해서 apply 한다\n\n1. 인프라에서 추가를 하면 서비스에 설정파일을 주입한다.\n2. 서비스에서 간단한 파일이라도 추가해서 신호를 준다\n- 관건은 서비스를 업데이트 했을 때 따로 설정 없이 인프라가 알아챌 수 있는지인데\n- cron을 계속 한다? 무리...\n    - argocd도 근데 레포지토리를 cron하는 방식 아닌가?\n- argocd로 배포를 하면 처음 등록만 수동으로 해주면 된다.\n- kubernetes를 워크플로우에서 동작하면 argocd 필요 없다\n- argocd가 소스코드 변경을 보는게 아니라 yaml 파일을 보는거라...\n\n지금은 일단 elasticsearch에 dockerfile 빌드할 때 synonym 파일을 집어넣었다\n이러면 github과 연동이 안되어서 버전 업데이트 할 때 날아간다.\n대응 방법을 생각해야 한다\n쿠버네티스 로컬에서 볼륨을 만들어서 연결해도 github에 업데이트는 못한다\ncron으로 파일을 파싱해야 할까. 매일 한번씩 카피해서 올려도 될듯\n\nkubernetes 같은 네임스페이스에서 연결하는 방법은?\n서비스로 클러스터 ip는 오픈\n서비스 이름으로 인식은 한다.\n그러면 서버에서 호스트 명을 서비스명과 맞춰줘야 한다.\n\n#### argocd\nterraform 으로 master ip 얻어서 argocd 마스터로 전달\n인프라 레포에서는 생성만 하고, 싱크는 argocd가 github을 보면서 할 수 있나?\n\n서비스 레포에서 푸시 -> 도커 이미지 변경 -> 인프라 레포에서 변경 인식\n-> argocd sync\n- 소스 레파지토리에서 인프라 레파지토리의 버전값을 변경하고 푸시하는 방식으로\n사용하더라\n\n- argocd에서 kubernetes.local로 접속하는게 어디?\n\n#### 배포\n스테이징 서버 없이 카나리로 테스트\n실제환경에서 카나리 테스트\n\n데이터에 문제 생길 것에 대비해서 업데이트 시 스냅샷을 찍어놓고 찍은 후 생긴\n데이터를 따로 더할 수 있게한다\n문제가 생기면 스냅샷으로 롤백하고 추가된 데이터를 더한다\n\n스냅샷과 데이터복구가 잘 되는지 검증한다\n\n#### canary release\n카나리 배포를 할 때 프로덕션에 할 게 아니라 내부 서버로 카나리를 해놓으면\n검사하기 더 수월할까?\n프로덕션에서 테스트하는 것이 내부에서 보는 것과 차이가 없을까?\n프로덕션에서의 환경을 봐야하기 때문에 프로덕션을 봐야할까?\n\n#### 스테이징 대신 카나리로 직접 테스트\n그러면 카나리 하다가 전체가 문제가 생기면 어떻게 하냐는 걱정 생긴다\n\n격리를 잘 하고, 고가용성을 챙기고\n데이터 변경으로 인한 영향이 없도록 해야한다\n\n\n먼저 쿠버네티스, 깃헙을 이용해 개발하다가\n팀이 따로 분리되어 전문화 되면 비로소 자체 시스템이 필요하지 않을까\n\n처음에는 여러 역할이 한 팀에 있고, 이 팀들을 관리하는 팀이 있는 구조에서\n팀을 관리하는 팀을 관리하는 팀이 필요해지는 시점 정도부터 세부적인 팀의 분리를 하던가, 상위팀이 하위 팀을 위한 툴을 개발하는 팀으로 역할을 하던가 하면 되지 않을까\n\n#### 다른 버전을 사람들이 쓰면 문제가 생긴다\n특히 db 처리에서 차이가 있으면 그렇겠다\n롤링업데이트는 괜찮은게 맞나?\n- 어댑터 패턴이라는 것이 있다\n  점진적 업데이트 시 이전 버전의 데이터를 갖고 있다가 출력을 바꿔주는 식\n\n카나리를 먼저 하고 롤링 업데이트를 하면 되지 않을까?\ndb 같은 업데이트는 카나리로 하는게 좋겠다\n\n#### without stage server\nI want to make only 2 stages environment\ndevelopment & production\n\nwhat is problem\n- staging server need exist?\n- production safe\n- production server has problem\n- managing critical data\n- real world simulation\n\nif in kubernetes. staging server is not problem. just one more pods?\n\nis it over-resource?\nCD pipeline can replace staging server?\n\n- gitflow\n- master, dev, release, stage, hotfix -- too much\n- dev, test, stage, prod -- too much\n- multi stage is require?\n\ncan parsing data from every node?\n","frontmatter":{"title":"CI/CD 구성 연습","summary":"정적 소스 체크와 Ansible, Terraform, ArgoCD 를 이용한 배포","date":"2021, 03 09","updated":"2021, 10 23","tags":"deep_knowledge","parent":null},"tableOfContents":"<ul>\n<li>\n<p><a href=\"#%EA%B0%9C%EC%9A%94\">개요</a></p>\n</li>\n<li>\n<p><a href=\"#%EC%A0%84%EC%B2%B4%EC%A0%81%EC%9D%B8-%ED%9D%90%EB%A6%84\">전체적인 흐름</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%A0%9C%ED%95%9C\">제한</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#ci\">CI</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#ci-strategy\">CI strategy</a></li>\n<li><a href=\"#ci-cookbook\">CI cookbook</a></li>\n<li><a href=\"#jenkins\">jenkins</a></li>\n<li><a href=\"#pipeline\">pipeline</a></li>\n<li><a href=\"#%EC%BB%A4%EB%B0%8B-%EC%8B%9C-%EB%8F%99%EC%9E%91-%EA%B0%80%EB%8A%A5%ED%95%9C-%EB%8B%A8%EC%9C%84%EB%A1%9C-%ED%95%9C%EB%8B%A4\">커밋 시 동작 가능한 단위로 한다</a></li>\n<li><a href=\"#%EA%B8%B0%EB%8A%A5%EC%97%90-%EB%AC%B8%EC%A0%9C-%EC%97%86%EB%8A%94-%EA%B2%83%EC%9D%B4-%ED%99%95%EC%9D%B8-%EB%90%9C-%EB%8B%A8%EC%9C%84%EB%A1%9C-%EC%BB%A4%EB%B0%8B%EC%9D%84-%ED%95%98%EA%B3%A0-%EC%8B%B6%EB%8B%A4\">기능에 문제 없는 것이 확인 된 단위로 커밋을 하고 싶다</a></li>\n<li><a href=\"#pr\">pr</a></li>\n<li><a href=\"#meshkorea\">meshkorea</a></li>\n<li><a href=\"#devops\">devops</a></li>\n<li><a href=\"#workflow\">workflow</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%A0%95%EC%A0%81-%EC%86%8C%EC%8A%A4-%EB%B6%84%EC%84%9D\">정적 소스 분석</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#report\">report</a></li>\n<li><a href=\"#workflow-1\">workflow</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#cd\">CD</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#imagine-of-erp-cicd\">imagine of erp CI/CD</a></li>\n<li><a href=\"#feedback\">Feedback</a></li>\n<li><a href=\"#code-static-analyze-content\">Code static analyze content</a></li>\n<li><a href=\"#deploy-make-easy\">deploy make easy</a></li>\n<li><a href=\"#%EB%B0%B0%ED%8F%AC\">배포</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EB%B0%B0%ED%8F%AC-%EC%9E%90%EB%8F%99%ED%99%94\">배포 자동화</a></p>\n<ul>\n<li><a href=\"#%EC%83%81%ED%99%A9-1\">상황 1</a></li>\n<li><a href=\"#%EC%83%81%ED%99%A9-2\">상황 2</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%83%81%ED%99%A9-3\">상황 3</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#edge-case\">edge case</a></li>\n<li><a href=\"#reference\">reference</a></li>\n<li><a href=\"#github%EC%9D%B4%EB%82%98-jenkins-travis%EC%97%90%EC%84%9C-cicd-%EB%85%B8%ED%95%98%EC%9A%B0%EB%A5%BC-%EA%B3%B5%EC%9C%A0%ED%95%A0-%EA%B2%83-%EA%B0%99%EC%9D%80%EB%8D%B0\">github이나 jenkins, travis에서 ci/cd 노하우를 공유할 것 같은데</a></li>\n<li><a href=\"#ci-cd-pipeline\">ci cd pipeline</a></li>\n<li><a href=\"#etc\">etc</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"#deploy\">Deploy</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#infra%EC%99%80-source%EB%A5%BC-%EB%B6%84%EB%A6%AC\">infra와 source를 분리</a></li>\n<li><a href=\"#deploy-1\">deploy</a></li>\n<li><a href=\"#argocd\">argocd</a></li>\n<li><a href=\"#%EB%B0%B0%ED%8F%AC-1\">배포</a></li>\n<li><a href=\"#canary-release\">canary release</a></li>\n<li><a href=\"#%EC%8A%A4%ED%85%8C%EC%9D%B4%EC%A7%95-%EB%8C%80%EC%8B%A0-%EC%B9%B4%EB%82%98%EB%A6%AC%EB%A1%9C-%EC%A7%81%EC%A0%91-%ED%85%8C%EC%8A%A4%ED%8A%B8\">스테이징 대신 카나리로 직접 테스트</a></li>\n<li><a href=\"#%EB%8B%A4%EB%A5%B8-%EB%B2%84%EC%A0%84%EC%9D%84-%EC%82%AC%EB%9E%8C%EB%93%A4%EC%9D%B4-%EC%93%B0%EB%A9%B4-%EB%AC%B8%EC%A0%9C%EA%B0%80-%EC%83%9D%EA%B8%B4%EB%8B%A4\">다른 버전을 사람들이 쓰면 문제가 생긴다</a></li>\n<li><a href=\"#without-stage-server\">without stage server</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>"}},"pageContext":{"slug":"/ci_cd/","previous":{"fields":{"slug":"/blog/100k_concurrent_server/"},"frontmatter":{"title":"10만 유저 동시 접속 가능하게 하기","tags":null}},"next":{"fields":{"slug":"/web/"},"frontmatter":{"title":"WEB","tags":"deep_knowledge"}}}},"staticQueryHashes":["3000541721","4165914708","488914979"],"slicesMap":{}}